var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AlertComponent.html",[0,0.339,1,0.935]],["body/components/AlertComponent.html",[0,0.493,1,1.482,2,1.406,3,0.166,4,0.142,5,1.051,6,1.119,7,1.051,8,1.051,9,0.142,10,2.55,11,0.928,12,2.112,13,2.09,14,5.431,15,1.594,16,4.984,17,1.594,18,4.279,19,0.641,20,0.967,21,5.431,22,3.632,23,4.301,24,4.279,25,5.741,26,0.642,27,0.024,28,2.082,29,0.805,30,3.004,31,4.984,32,3.004,33,3.004,34,0.679,35,0.82,36,0.216,37,3.206,38,4.279,39,0.242,40,0.166,41,0.031,42,1.051,43,3.004,44,3.004,45,3.632,46,4.279,47,4.279,48,4.144,49,4.279,50,3.632,51,3.004,52,2.55,53,3.004,54,4.279,55,4.279,56,3.004,57,4.279,58,2.55,59,4.23,60,3.004,61,3.004,62,3.004,63,3.004,64,3.004,65,2.55,66,3.004,67,3.004,68,3.004,69,2.55,70,3.004,71,3.004,72,3.004,73,3.004,74,3.004,75,0.679,76,1.496,77,1.496,78,0.77,79,1.899,80,1.051,81,0.693,82,1.051,83,0.82,84,1.051,85,0.82,86,1.051,87,0.82,88,1.051,89,0.82,90,0.987,91,1.051,92,0.77,93,1.217,94,1.051,95,0.77,96,1.496,97,0.82,98,1.051,99,0.82,100,1.051,101,0.77,102,1.051,103,0.77,104,1.051,105,0.82,106,1.097,107,0.77,108,0.872,109,0.872,110,0.77,111,1.051,112,0.77,113,0.987,114,1.051,115,0.01,116,0.014,117,0.01]],["title/components/AppComponent.html",[0,0.339,83,0.935]],["body/components/AppComponent.html",[0,0.524,1,0.917,2,1.521,3,0.186,4,0.159,5,1.175,6,1.252,7,1.175,8,1.175,9,0.159,11,1.038,12,2.143,13,2.124,15,1.724,17,1.724,19,0.432,20,1.046,26,0.504,27,0.024,29,0.747,34,0.76,35,0.917,36,0.381,39,0.271,40,0.186,41,0.035,75,0.76,76,1.619,77,1.619,78,0.862,79,1.995,80,1.175,81,0.794,82,1.175,83,1.633,84,1.175,85,0.917,86,1.175,87,0.917,88,1.175,89,0.917,90,1.104,91,1.175,92,0.862,93,1.268,94,1.175,95,0.862,96,1.619,97,0.917,98,1.175,99,0.917,100,1.175,101,0.862,102,1.175,103,0.862,104,1.175,105,0.917,106,1.187,107,0.862,108,0.976,109,0.976,110,0.862,111,1.175,112,0.862,113,1.104,114,1.175,115,0.011,116,0.016,117,0.011,118,2.853,119,1.521,120,2.245,121,2.424,122,5.295,123,4.629,124,2.537,125,0.712,126,2.268,127,2.623,128,3.083,129,3.361,130,0.712,131,0.667,132,3.361,133,2.518,134,2.068,135,1.252,136,1.038,137,3.361,138,2.853]],["title/modules/AppModule.html",[139,0.995,140,2.312]],["body/modules/AppModule.html",[3,0.207,4,0.177,9,0.177,13,1.155,27,0.024,36,0.482,39,0.302,40,0.207,41,0.038,75,0.845,83,1.874,87,1.742,115,0.013,116,0.017,117,0.013,128,2.422,134,2.302,139,1.086,140,4.706,141,1.393,142,1.697,143,2.929,144,2.721,145,2.606,146,1.586,147,3.175,148,3.175,149,3.175,150,3.175,151,3.928,152,3.928,153,3.106,154,2.606,155,1.959,156,1.82,157,3.74,158,2.422,159,4.976,160,3.175,161,2.802,162,2.258,163,4.976,164,2.117,165,3.74,166,3.74,167,2.802,168,2.524,169,3.74]],["title/modules/AppRoutingModule.html",[139,0.995,151,2.109]],["body/modules/AppRoutingModule.html",[3,0.24,4,0.205,9,0.205,27,0.025,36,0.394,39,0.35,40,0.24,41,0.044,106,1.111,108,1.258,115,0.015,116,0.019,117,0.015,141,1.614,146,1.838,151,3.37,158,2.109,162,2.484,170,4.333,171,3.247,172,5.475,173,3.37,174,3.099,175,1.424,176,1.614,177,4.333,178,4.724,179,4.333,180,2.484,181,4.333,182,4.333,183,6.306,184,4.333,185,4.333,186,4.333,187,4.333,188,1.966,189,4.333,190,4.333,191,3.678,192,4.333,193,4.333,194,4.333,195,4.333]],["title/components/AuthComponent.html",[0,0.339,85,0.935]],["body/components/AuthComponent.html",[0,0.393,1,1.085,2,1.059,3,0.114,4,0.097,5,0.72,7,0.72,8,0.72,9,0.097,11,0.636,12,1.99,13,1.955,17,1.201,19,0.265,20,0.729,23,2.416,26,0.777,27,0.025,28,2.376,29,0.97,34,1.104,35,1.333,36,0.39,39,0.166,40,0.114,41,0.021,75,0.465,76,1.128,77,1.128,78,0.528,79,1.573,80,0.72,81,0.721,82,0.72,83,0.562,84,0.72,85,1.227,86,0.72,87,0.562,88,0.72,89,0.562,90,0.676,91,0.72,92,0.528,93,1.035,94,0.72,95,0.528,96,1.128,97,0.562,98,0.72,99,0.562,100,0.72,101,0.528,102,0.72,103,0.528,104,0.72,105,0.562,106,0.827,107,0.528,108,0.598,109,0.598,110,0.528,111,0.72,112,1.153,113,0.676,114,0.72,115,0.007,116,0.011,117,0.007,119,1.059,125,0.683,126,1.389,127,2.197,130,0.842,131,0.789,136,1.779,175,0.676,176,1.819,191,2.737,196,1.748,197,2.446,198,3.224,199,0.936,200,3.975,201,3.975,202,3.659,203,3.975,204,5.414,205,2.768,206,4.498,207,2.416,208,4.498,209,3.224,210,2.835,211,5.414,212,3.224,213,2.059,214,2.059,215,2.737,216,3.818,217,2.059,218,1.748,219,2.059,220,3.224,221,2.059,222,1.748,223,3.224,224,2.059,225,2.446,226,1.686,227,1.803,228,2.446,229,2.059,230,2.546,231,2.059,232,2.081,233,2.059,234,1.748,235,1.078,236,2.737,237,0.818,238,2.059,239,2.059,240,1.267,241,1.543,242,3.975,243,2.059,244,0.818,245,1.389,246,2.059,247,3.659,248,2.059,249,3.975,250,3.975,251,2.059,252,2.059,253,2.059,254,2.059,255,2.059,256,1.748,257,2.416,258,2.059,259,3.224,260,2.059,261,1.748,262,3.224,263,3.224,264,2.059,265,2.059,266,2.059,267,2.059,268,3.224,269,2.059,270,2.059,271,2.059,272,2.059,273,3.224,274,3.224,275,3.818,276,4.498,277,4.498,278,2.416]],["title/guards/AuthGuard.html",[279,2.567,280,2.312]],["body/guards/AuthGuard.html",[3,0.201,4,0.172,9,0.172,19,0.466,20,1.102,26,0.732,27,0.025,29,0.787,34,0.82,36,0.442,39,0.293,40,0.201,41,0.037,81,0.678,115,0.012,116,0.016,117,0.012,119,1.192,121,1.899,125,0.769,126,2.448,127,2.683,130,1.033,131,0.968,135,1.351,136,1.12,175,1.192,176,1.351,210,3.523,232,1.899,236,4.674,237,1.44,241,2.717,244,2.187,280,3.29,281,2.717,282,3.079,283,5.215,284,3.627,285,3.627,286,4.998,287,4.998,288,3.627,289,3,290,3.29,291,5.507,292,4.875,293,1.816,294,3.079,295,3.079,296,2.232,297,2.448,298,3.079,299,3.079,300,3.627,301,5.507,302,1.765,303,3.627,304,3.627,305,3.079,306,3.079,307,3.627,308,2.717]],["title/interceptors/AuthInterceptorService.html",[309,2.908,310,2.109]],["body/interceptors/AuthInterceptorService.html",[3,0.222,4,0.19,9,0.19,19,0.515,20,1.178,26,0.782,27,0.024,29,0.841,34,0.906,36,0.441,39,0.324,40,0.222,41,0.041,42,1.402,81,0.725,115,0.014,116,0.018,117,0.014,119,1.317,125,0.85,126,2.706,127,2.76,130,1.104,131,1.034,135,1.494,164,2.27,176,1.494,241,3.004,244,2.298,293,1.94,295,3.404,296,2.468,298,3.404,299,3.404,302,1.951,310,3.206,311,4.01,312,4.912,313,3.404,314,5.209,315,4.01,316,5.209,317,6.126,318,5.786,319,6.126,320,4.01,321,4.01,322,5.209,323,4.01,324,4.01,325,2.706,326,4.01,327,4.01,328,4.01,329,4.01,330,3.004,331,4.01,332,4.01,333,4.01]],["title/modules/AuthModule.html",[139,0.995,334,2.312]],["body/modules/AuthModule.html",[0,0.422,3,0.236,4,0.202,9,0.202,27,0.024,36,0.476,39,0.344,40,0.236,41,0.044,75,0.963,85,1.834,115,0.014,116,0.018,117,0.014,139,1.237,141,1.588,142,1.934,143,3.119,144,2.074,145,2.232,146,1.808,153,3.218,154,2.837,155,2.232,156,2.074,158,2.636,162,2.458,168,2.876,173,2.623,175,1.4,235,2.232,334,4.589,335,3.618,336,4.262,337,3.618,338,4.262,339,4.599,340,3.193,341,4.599,342,4.262,343,4.262]],["title/interfaces/AuthResponseData.html",[240,2.109,344,2.109]],["body/interfaces/AuthResponseData.html",[3,0.135,4,0.115,9,0.115,19,0.313,26,0.863,27,0.025,28,3.378,36,0.414,39,0.197,40,0.203,41,0.025,42,2.01,115,0.008,116,0.012,117,0.008,121,1.275,127,1.033,131,0.975,135,0.907,136,1.517,164,1.379,175,0.8,176,1.963,199,1.065,202,1.825,210,2.311,228,1.499,232,1.921,237,0.967,240,2.258,244,2.093,245,4.284,247,4.307,257,3.681,278,1.825,290,2.979,293,1.367,296,1.499,297,1.644,302,2.391,308,1.825,325,1.644,344,1.499,345,2.436,346,1.825,347,4.17,348,4.702,349,4.17,350,4.17,351,4.17,352,4.17,353,2.749,354,3.114,355,2.067,356,2.067,357,2.067,358,2.067,359,1.644,360,2.067,361,2.067,362,2.067,363,1.825,364,2.067,365,2.749,366,3.114,367,2.067,368,3.114,369,3.114,370,2.749,371,3.114,372,3.114,373,3.114,374,3.114,375,3.114,376,3.114,377,3.114,378,2.067,379,3.114,380,2.749,381,1.556,382,3.114,383,2.067,384,3.114,385,3.114,386,2.067,387,2.067,388,2.067,389,2.067,390,2.067,391,2.067,392,3.114,393,1.379,394,1.825,395,1.825,396,2.067,397,2.067,398,2.067,399,2.067,400,2.067,401,2.067,402,2.067,403,2.067,404,3.114,405,2.067,406,2.067,407,2.067,408,2.067,409,1.825,410,2.067,411,2.067,412,3.747,413,2.067,414,2.067,415,2.067,416,2.067,417,2.067,418,2.067,419,2.067,420,2.067,421,2.067,422,2.067,423,3.114,424,2.067,425,3.747,426,2.067,427,2.067,428,2.067,429,3.747,430,2.067,431,2.067,432,2.067,433,2.067]],["title/injectables/AuthService.html",[127,1.453,293,1.276]],["body/injectables/AuthService.html",[3,0.117,4,0.1,9,0.1,19,0.271,20,0.743,26,0.82,27,0.025,28,3.345,29,0.958,34,1.235,35,1.244,36,0.393,39,0.17,40,0.182,41,0.022,42,1.976,81,0.728,115,0.007,116,0.011,117,0.007,121,1.104,125,0.447,127,1.393,130,1.109,131,1.039,135,0.786,136,1.833,164,1.194,175,0.693,176,1.84,199,0.954,202,1.58,210,2.861,226,0.894,227,0.957,228,1.298,232,1.721,237,0.838,240,1.298,244,1.962,245,4.144,247,4.53,257,3.414,275,2.789,278,1.58,290,1.423,293,1.224,296,1.298,297,1.423,302,2.546,308,1.58,325,1.423,344,1.298,346,1.58,347,1.79,348,4.193,349,1.79,350,1.79,351,1.79,352,1.79,353,3.414,354,3.868,355,1.79,356,1.79,357,1.79,358,1.79,359,1.423,360,1.79,361,2.789,362,3.426,363,2.462,364,2.789,365,2.462,366,2.789,367,1.79,368,2.789,369,2.789,370,2.462,371,2.789,372,2.789,373,2.789,374,2.789,375,2.789,376,2.789,377,2.789,378,3.426,379,3.868,380,3.414,381,2.219,382,2.789,383,1.79,384,2.789,385,2.789,386,1.79,387,1.79,388,1.79,389,1.79,390,1.79,391,3.868,392,2.789,393,1.194,394,1.58,395,1.58,396,1.79,397,1.79,398,1.79,399,1.79,400,1.79,401,1.79,402,1.79,403,1.79,404,3.426,405,1.79,406,1.79,407,2.789,408,1.79,409,3.414,410,1.79,411,1.79,412,3.426,413,1.79,414,2.789,415,1.79,416,1.79,417,1.79,418,2.789,419,1.79,420,1.79,421,1.79,422,1.79,423,2.789,424,1.79,425,3.426,426,1.79,427,1.79,428,1.79,429,3.426,430,1.79,431,1.79,432,1.79,433,1.79,434,1.423,435,3.286,436,3.286,437,3.286,438,1.79,439,3.286,440,2.109,441,2.109,442,2.109,443,2.109,444,2.109,445,2.109,446,2.109,447,2.109,448,2.109,449,2.109]],["title/modules/CoreModule.html",[139,0.995,152,2.109]],["body/modules/CoreModule.html",[3,0.239,4,0.204,9,0.204,27,0.024,36,0.468,39,0.349,40,0.239,41,0.044,75,0.977,106,1.108,115,0.015,116,0.018,117,0.015,139,1.254,141,1.61,142,1.961,143,2.263,144,2.103,145,3.139,146,1.833,152,4.197,154,2.862,155,2.263,156,2.103,162,2.48,164,2.446,188,1.961,232,2.263,310,4.085,450,3.668,451,3.668,452,2.814,453,4.321,454,5.465,455,4.321,456,4.321,457,3.668,458,2.862,459,2.916,460,4.321,461,4.321,462,4.321]],["title/injectables/DataStorageService.html",[293,1.276,463,2.109]],["body/injectables/DataStorageService.html",[3,0.196,4,0.167,9,0.167,19,0.455,20,1.083,26,0.531,27,0.025,29,0.878,34,1.083,35,0.965,36,0.452,39,0.285,40,0.196,41,0.036,81,0.492,93,1.235,115,0.012,116,0.016,117,0.012,121,1.852,125,1.016,127,2.723,130,0.75,131,0.702,133,2.649,136,1.679,164,2.002,176,1.317,180,2.174,226,2.032,244,2.159,293,1.785,294,3.002,296,2.176,297,2.386,325,2.386,353,4.366,363,3.591,365,3.591,370,2.649,434,2.386,438,3.002,452,2.723,457,3.002,463,2.95,464,4.947,465,3.002,466,5.828,467,5.828,468,3.536,469,3.536,470,3.536,471,3.536,472,3.002,473,3.536,474,4.793,475,4.793,476,4.068,477,4.793,478,4.793,479,3.536,480,3.536,481,3.536,482,3.536,483,2.002,484,4.068,485,3.536,486,3.536]],["title/directives/DropdownDirective.html",[78,0.879,110,0.879]],["body/directives/DropdownDirective.html",[3,0.233,4,0.199,9,0.199,11,1.298,12,1.659,19,0.54,26,0.631,27,0.024,29,0.956,36,0.303,37,3.15,39,0.339,40,0.233,41,0.043,78,1.377,81,0.585,109,1.221,110,1.377,115,0.014,116,0.018,117,0.014,125,0.891,130,0.891,131,0.835,135,1.566,226,1.783,227,1.908,230,3.35,487,3.569,488,5.371,489,5.371,490,5.371,491,5.371,492,5.371,493,4.205,494,6.236,495,4.205,496,5.371,497,4.205,498,4.205,499,6.444,500,4.205,501,4.205,502,4.205,503,4.205,504,4.205,505,4.205,506,4.205,507,5.371,508,6.236,509,4.205,510,4.205]],["title/components/HeaderComponent.html",[0,0.339,87,0.935]],["body/components/HeaderComponent.html",[0,0.464,1,0.736,2,1.3,3,0.149,4,0.128,5,0.943,6,1.005,7,0.943,8,0.943,9,0.128,11,0.833,12,2.08,13,2.055,15,1.474,17,1.474,19,0.347,20,0.895,26,0.594,27,0.024,29,0.984,34,1.244,35,1.569,36,0.372,39,0.218,40,0.149,41,0.028,75,0.61,76,1.384,77,1.384,78,0.692,79,1.806,80,0.943,81,0.719,82,0.943,83,0.736,84,0.943,85,0.736,86,0.943,87,1.41,88,0.943,89,0.736,90,0.886,91,0.943,92,0.692,93,1.26,94,0.943,95,0.692,96,1.384,97,0.736,98,0.943,99,0.736,100,0.943,101,0.692,102,0.943,103,0.692,104,0.943,105,0.736,106,1.325,107,0.692,108,1.361,109,0.783,110,0.692,111,0.943,112,0.692,113,0.886,114,0.943,115,0.009,116,0.013,117,0.009,119,1.3,120,1.988,124,2.191,125,0.839,127,2.52,130,0.572,131,0.535,133,2.021,136,1.699,180,1.796,197,2.886,199,1.149,205,3.179,225,2.886,226,1.144,227,1.224,230,2.24,237,1.071,302,1.312,409,2.965,463,3.539,476,3.36,511,2.289,512,3.958,513,4.689,514,3.958,515,4.689,516,4.689,517,5.166,518,5.166,519,5.166,520,2.289,521,3.958,522,2.697,523,2.697,524,2.697,525,2.697,526,2.697,527,2.697,528,2.289,529,2.289,530,2.697,531,2.697,532,2.697,533,2.697,534,2.697,535,2.697,536,2.697,537,3.958,538,3.36,539,3.36,540,5.166,541,3.958]],["title/classes/Ingredient.html",[41,0.035,542,1.554]],["body/classes/Ingredient.html",[3,0.258,4,0.221,9,0.221,19,0.6,26,0.932,27,0.023,28,3.151,29,1.003,40,0.258,41,0.048,81,0.925,115,0.016,116,0.019,117,0.016,125,0.99,130,0.99,131,0.927,199,1.666,381,2.746,542,2.603,543,2.644,544,3.965,545,4.486,546,4.98,547,3.965,548,4.671,549,5.737,550,3.965]],["title/components/LoadingSpinnerComponent.html",[0,0.339,89,0.935]],["body/components/LoadingSpinnerComponent.html",[0,0.497,1,0.831,2,1.419,3,0.168,4,0.144,5,1.511,6,1.134,7,1.065,8,1.065,9,0.144,11,0.94,12,2.116,13,2.094,15,1.609,27,0.024,36,0.219,39,0.246,40,0.168,41,0.031,45,3.667,48,2.916,50,3.667,52,3.667,58,2.585,59,3.667,65,2.585,69,3.667,75,0.688,76,1.511,77,1.511,78,0.781,79,1.911,80,1.065,81,0.699,82,1.065,83,0.831,84,1.065,85,0.831,86,1.065,87,0.831,88,1.065,89,1.491,90,1.969,91,1.065,92,0.781,93,1.223,94,1.065,95,0.781,96,1.511,97,0.831,98,1.065,99,0.831,100,1.065,101,0.781,102,1.065,103,0.781,104,1.065,105,0.831,106,1.108,107,0.781,108,0.884,109,0.884,110,0.781,111,1.065,112,0.781,113,1,114,1.065,115,0.01,116,0.015,117,0.01,551,2.585,552,2.282,553,2.585,554,4.32,555,5.021,556,6.164,557,6.164,558,4.32,559,3.045,560,4.32,561,3.045,562,4.32,563,3.045,564,3.045,565,4.638,566,3.045,567,4.32,568,3.045,569,2.585,570,4.32,571,5.465,572,3.045,573,5.465,574,3.045,575,3.045,576,3.045,577,3.045,578,2.055,579,3.045,580,3.045,581,5.021,582,5.021,583,3.045,584,5.021,585,3.045,586,3.045,587,3.045,588,3.045,589,3.045,590,3.045,591,4.32,592,3.045,593,3.045]],["title/classes/LoggingService.html",[41,0.035,128,1.667]],["body/classes/LoggingService.html",[3,0.241,4,0.206,9,0.206,19,0.56,20,1.242,23,5.164,26,0.825,27,0.024,28,3.17,29,0.887,34,0.985,35,1.189,36,0.314,39,0.352,40,0.241,41,0.045,81,0.606,115,0.015,116,0.019,117,0.015,121,2.282,128,2.674,130,0.924,131,0.865,199,1.595,293,1.623,543,2.466,594,3.699,595,6.018,596,6.018,597,4.358,598,4.358,599,4.358,600,5.494,601,5.494,602,3.699,603,4.358,604,4.358,605,4.358,606,5.494]],["title/directives/PlaceholderDirective.html",[78,0.879,112,0.879]],["body/directives/PlaceholderDirective.html",[3,0.262,4,0.224,9,0.224,11,1.46,12,1.785,19,0.608,26,0.867,27,0.024,29,0.933,36,0.34,39,0.382,40,0.262,41,0.049,78,1.482,81,0.658,109,1.373,112,1.482,113,1.899,115,0.016,116,0.02,117,0.016,125,1.002,130,1.002,131,0.939,199,1.678,545,3.901,550,4.013,607,4.013,608,6.989,609,4.728,610,4.728,611,4.728]],["title/classes/Recipe.html",[41,0.035,93,0.726]],["body/classes/Recipe.html",[3,0.221,4,0.189,9,0.189,19,0.514,26,0.952,27,0.024,28,3.421,29,1.024,36,0.288,40,0.221,41,0.041,81,0.905,93,1.102,115,0.014,116,0.018,117,0.014,125,0.848,130,0.848,131,0.794,199,1.51,483,3.748,542,2.95,543,2.264,545,4.681,547,4.414,612,3.395,613,5.62,614,5.62,615,5.201,616,4,617,4,618,4,619,2.462,620,4,621,4,622,4,623,3.395]],["title/components/RecipeDetailComponent.html",[0,0.339,92,0.879]],["body/components/RecipeDetailComponent.html",[0,0.45,1,0.7,2,1.253,3,0.142,4,0.121,5,0.897,6,0.955,7,0.897,8,0.897,9,0.121,11,0.792,12,2.065,13,2.037,15,1.42,17,1.42,19,0.33,20,0.862,26,0.683,27,0.024,29,0.944,34,1.139,35,1.47,36,0.363,39,0.207,40,0.142,41,0.026,75,0.58,76,1.333,77,1.333,78,0.657,79,1.762,80,0.897,81,0.701,82,0.897,83,0.7,84,0.897,85,0.7,86,0.897,87,0.7,88,0.897,89,0.7,90,0.842,91,0.897,92,1.292,93,1.46,94,0.897,95,0.657,96,1.333,97,0.7,98,0.897,99,0.7,100,0.897,101,0.657,102,0.897,103,0.657,104,0.897,105,0.7,106,1.292,107,0.657,108,1.321,109,0.744,110,0.657,111,0.897,112,0.657,113,0.842,114,0.897,115,0.009,116,0.013,117,0.009,119,1.253,120,1.93,124,2.137,125,0.543,130,0.543,131,0.509,135,0.955,136,1.177,175,0.842,199,1.107,210,3.062,256,2.176,289,2.801,330,3.41,381,1.617,393,2.576,452,2.394,538,3.236,624,3.4,625,4.054,626,2.176,627,3.813,628,4.552,629,3.813,630,5.04,631,5.04,632,5.04,633,2.176,634,3.776,635,3.813,636,2.564,637,2.564,638,2.564,639,2.564,640,2.564,641,1.578,642,1.73,643,2.564,644,3.236,645,2.176,646,2.564,647,2.176,648,2.564,649,2.564,650,2.857,651,2.857,652,2.176,653,3.41,654,2.564,655,2.857,656,3.236,657,2.857,658,3.236,659,3.236]],["title/components/RecipeEditComponent.html",[0,0.339,95,0.879]],["body/components/RecipeEditComponent.html",[0,0.383,1,0.539,2,1.025,3,0.109,4,0.093,5,0.691,6,0.736,7,0.691,8,0.691,9,0.093,11,0.61,12,1.974,13,1.938,15,1.163,17,1.163,19,0.401,20,0.706,26,0.718,27,0.024,29,0.959,34,1.15,35,1.454,36,0.316,39,0.159,40,0.109,41,0.02,42,2.113,75,0.447,76,1.091,77,1.091,78,0.507,79,1.537,80,0.691,81,0.81,82,0.691,83,0.539,84,0.691,85,0.539,86,0.691,87,0.539,88,0.691,89,0.539,90,0.649,91,0.691,92,0.507,93,1.316,94,0.691,95,1.127,96,1.091,97,0.539,98,0.691,99,0.539,100,0.691,101,0.507,102,0.691,103,0.507,104,0.691,105,0.539,106,0.8,107,0.507,108,0.573,109,0.573,110,0.507,111,0.691,112,0.507,113,0.649,114,0.691,115,0.007,116,0.011,117,0.007,119,1.025,120,1.641,124,1.864,125,0.662,130,0.662,131,0.62,136,1.572,175,0.649,176,1.163,199,0.906,207,3.294,210,2.791,226,0.838,227,0.896,228,1.216,230,1.767,235,1.034,244,0.784,289,1.921,290,2.106,330,2.338,381,2.03,393,2.19,452,2.26,483,1.118,484,1.677,539,2.649,542,1.755,546,2.338,565,1.677,569,1.677,613,3.284,614,1.677,624,3.42,634,3.294,642,1.333,644,1.677,645,2.649,647,1.677,650,1.48,651,1.48,652,1.677,653,2.338,655,1.48,657,1.48,660,4.077,661,1.48,662,3.284,663,2.649,664,3.284,665,3.869,666,4.396,667,4.396,668,4.396,669,3.121,670,2.649,671,3.869,672,1.975,673,2.649,674,1.975,675,1.975,676,1.975,677,1.975,678,3.121,679,1.975,680,1.975,681,1.677,682,1.975,683,5.089,684,1.975,685,1.975,686,3.121,687,1.975,688,1.975,689,1.975,690,3.284,691,1.975,692,1.677,693,1.975,694,1.975,695,1.975,696,1.975,697,1.975,698,1.975,699,1.975,700,1.975,701,1.975,702,1.975,703,3.121,704,5.329,705,3.121,706,3.121,707,2.649,708,1.975,709,3.121,710,3.121,711,3.121,712,3.121,713,1.975,714,1.975,715,1.975,716,1.975,717,1.975,718,1.975,719,1.975,720,1.975,721,1.975,722,3.121,723,3.121,724,3.121,725,3.121,726,2.649,727,1.975,728,3.121,729,3.121,730,1.975,731,1.975,732,1.975]],["title/components/RecipeItemComponent.html",[0,0.339,97,0.935]],["body/components/RecipeItemComponent.html",[0,0.513,1,0.881,2,1.479,3,0.179,4,0.153,5,1.129,6,1.202,7,1.129,8,1.129,9,0.153,11,0.997,12,2.132,13,2.112,15,1.677,17,1.677,19,0.721,20,1.018,22,3.821,26,0.676,27,0.024,29,0.837,34,0.73,35,1.228,36,0.324,37,3.883,39,0.261,40,0.179,41,0.033,75,0.73,76,1.574,77,1.574,78,0.828,79,1.961,80,1.129,81,0.721,82,1.129,83,0.881,84,1.129,85,0.881,86,1.129,87,0.881,88,1.129,89,0.881,90,1.061,91,1.129,92,0.828,93,1.469,94,1.129,95,0.828,96,1.574,97,1.53,98,1.129,99,0.881,100,1.129,101,0.828,102,1.129,103,0.828,104,1.129,105,0.881,106,1.154,107,0.828,108,0.937,109,0.937,110,0.828,111,1.129,112,0.828,113,1.061,114,1.129,115,0.011,116,0.015,117,0.011,119,1.479,120,2.198,124,2.378,381,1.909,624,3.174,641,1.987,655,3.373,657,3.373,733,3.784,734,4.201,735,2.74,736,4.502,737,5.183,738,4.502,739,3.228,740,3.228,741,3.228]],["title/components/RecipeListComponent.html",[0,0.339,99,0.935]],["body/components/RecipeListComponent.html",[0,0.471,1,0.756,2,1.326,3,0.153,4,0.131,5,0.968,6,1.031,7,0.968,8,0.968,9,0.131,11,0.855,12,2.088,13,2.064,15,1.503,17,1.503,19,0.356,20,0.912,26,0.714,27,0.024,29,0.937,34,1.076,35,1.427,36,0.4,39,0.223,40,0.153,41,0.028,42,1.411,75,0.626,76,1.411,77,1.411,78,0.71,79,1.829,80,0.968,81,0.728,82,0.968,83,0.756,84,0.968,85,0.756,86,0.968,87,0.756,88,0.968,89,0.756,90,0.91,91,0.968,92,0.71,93,1.441,94,0.968,95,0.71,96,1.411,97,0.756,98,0.968,99,1.427,100,0.968,101,0.71,102,0.968,103,0.71,104,0.968,105,0.756,106,1.035,107,0.71,108,1.382,109,0.804,110,0.71,111,0.968,112,0.71,113,0.91,114,0.968,115,0.009,116,0.014,117,0.009,119,1.326,120,2.019,124,2.218,125,0.587,130,0.587,131,0.55,135,1.031,136,1.246,175,0.91,180,2.523,197,2.93,199,1.171,205,3.219,210,3.137,225,3.572,237,1.1,289,2.93,452,2.461,472,2.35,624,3.391,633,2.35,634,3.919,641,1.704,642,1.869,650,2.075,651,2.075,733,4.043,742,2.075,743,4.041,744,3.425,745,5.231,746,3.425,747,2.35,748,2.769,749,2.35,750,2.35,751,2.075,752,2.769,753,3.425,754,2.769,755,2.075]],["title/injectables/RecipeService.html",[293,1.276,452,1.453]],["body/injectables/RecipeService.html",[3,0.144,4,0.124,9,0.124,19,0.654,20,0.874,26,0.906,27,0.025,29,1.013,34,1.33,35,1.481,36,0.391,39,0.211,40,0.144,41,0.027,42,2.226,81,0.818,93,1.412,106,0.67,115,0.009,116,0.013,117,0.009,125,0.553,130,1.247,131,1.167,135,0.973,136,1.57,180,2.579,188,1.185,199,1.122,226,1.639,227,1.753,237,1.037,244,1.535,293,1.439,381,2.616,434,1.762,452,1.639,458,2.976,459,1.762,483,1.478,542,2.307,578,4.075,619,1.607,641,1.607,692,4.317,753,2.216,756,2.216,757,4.601,758,3.865,759,3.865,760,3.865,761,3.865,762,5.085,763,3.865,764,3.865,765,1.956,766,3.865,767,3.865,768,2.611,769,3.865,770,2.611,771,3.865,772,2.611,773,3.865,774,2.611,775,2.611,776,3.865,777,2.611,778,3.865,779,2.611,780,3.905,781,2.611,782,2.611,783,2.611,784,3.865,785,3.865,786,3.865,787,3.865,788,2.611,789,2.611,790,2.611,791,3.865,792,4.601,793,2.611,794,2.611,795,2.611,796,2.611,797,2.611,798,3.865,799,2.611,800,2.611,801,2.216,802,2.611,803,5.085,804,2.611,805,3.865,806,2.611,807,2.611,808,2.611]],["title/components/RecipeStartComponent.html",[0,0.339,103,0.879]],["body/components/RecipeStartComponent.html",[0,0.531,1,0.941,2,1.548,3,0.191,4,0.163,5,1.206,6,1.285,7,1.206,8,1.206,9,0.163,11,1.065,12,2.149,13,2.131,15,1.755,17,1.755,19,0.443,20,1.065,27,0.023,29,0.761,34,0.78,35,1.286,36,0.248,39,0.278,40,0.191,41,0.035,75,0.78,76,1.648,77,1.648,78,0.885,79,2.017,80,1.206,81,0.747,82,1.206,83,0.941,84,1.206,85,0.941,86,1.206,87,0.941,88,1.206,89,0.941,90,1.133,91,1.206,92,0.885,93,1.455,94,1.206,95,0.885,96,1.648,97,0.941,98,1.206,99,0.941,100,1.206,101,0.885,102,1.206,103,1.479,104,1.206,105,0.941,106,1.209,107,0.885,108,1.002,109,1.002,110,0.885,111,1.206,112,0.885,113,1.133,114,1.206,115,0.012,116,0.016,117,0.012,119,1.548,120,2.276,124,2.446,125,1.138,624,3.038,809,3.622,810,2.928,811,4.713,812,5.368,813,4.713,814,3.45,815,3.45,816,4.713,817,4.713]],["title/components/RecipesComponent.html",[0,0.339,101,0.879]],["body/components/RecipesComponent.html",[0,0.542,1,0.978,2,1.589,3,0.198,4,0.17,5,1.254,6,1.335,7,1.254,8,1.254,9,0.17,11,1.107,12,2.159,13,2.142,15,1.802,17,1.802,19,0.461,20,1.093,27,0.024,29,0.781,34,0.81,35,1.32,36,0.258,39,0.289,40,0.198,41,0.037,75,0.81,76,1.692,77,1.692,78,0.919,79,2.049,80,1.254,81,0.762,82,1.254,83,0.978,84,1.254,85,0.978,86,1.254,87,0.978,88,1.254,89,0.978,90,1.178,91,1.254,92,0.919,93,1.297,94,1.254,95,0.919,96,1.692,97,0.978,98,1.254,99,0.978,100,1.254,101,1.503,102,1.254,103,0.919,104,1.254,105,0.978,106,1.24,107,0.919,108,1.041,109,1.041,110,0.919,111,1.254,112,0.919,113,1.178,114,1.254,115,0.012,116,0.016,117,0.012,119,1.589,120,2.322,124,2.485,125,1.16,180,2.195,818,3.043,819,5.475,820,4.837,821,3.585,822,3.585]],["title/modules/RecipesModule.html",[139,0.995,823,2.312]],["body/modules/RecipesModule.html",[3,0.193,4,0.165,9,0.165,27,0.024,36,0.485,39,0.281,40,0.193,41,0.036,75,0.787,92,1.603,93,1.284,95,1.603,97,1.706,99,1.706,101,1.603,103,1.603,115,0.012,116,0.016,117,0.012,139,1.011,141,1.297,142,1.579,143,2.824,144,1.694,145,1.823,146,1.476,153,3.042,154,2.483,155,1.823,156,1.694,158,2.307,162,2.151,167,2.608,168,2.349,173,2.918,175,1.144,180,1.579,235,1.823,625,2.349,660,2.349,733,3.2,734,2.608,809,2.349,823,4.747,824,2.955,825,2.955,826,2.955,827,3.847,828,3.481,829,4.741,830,2.955,831,2.608,832,3.481,833,2.608,834,2.955,835,2.955]],["title/guards/RecipesResolverService.html",[279,2.567,836,2.312]],["body/guards/RecipesResolverService.html",[3,0.221,4,0.189,9,0.189,19,0.514,20,1.176,26,0.78,27,0.024,29,0.84,34,0.904,36,0.457,39,0.323,40,0.221,41,0.041,48,2.699,81,0.723,93,0.848,115,0.014,116,0.018,117,0.014,119,1.314,121,2.094,125,0.848,130,1.102,131,1.032,135,1.49,136,1.235,175,1.314,176,1.49,180,2.36,244,2.065,281,2.997,286,5.194,287,5.194,289,2.462,293,1.49,452,2.595,463,4.002,520,3.395,528,3.395,529,3.395,602,3.395,641,2.462,642,2.699,836,3.51,837,4.33,838,3.395,839,5.194,840,5.779,841,4,842,5.201,843,5.779,844,4,845,4,846,4,847,4]],["title/modules/RecipesRoutingModule.html",[139,0.995,827,2.109]],["body/modules/RecipesRoutingModule.html",[0,0.625,3,0.219,4,0.187,9,0.187,27,0.025,36,0.482,39,0.319,40,0.219,41,0.041,42,1.384,92,1.325,93,1.219,95,1.475,101,1.325,103,1.325,115,0.013,116,0.017,117,0.013,141,1.475,146,1.679,158,1.926,162,2.344,171,2.966,173,3.18,174,3.255,175,1.301,176,1.475,178,4.738,180,1.796,280,3.486,283,3.36,393,2.241,625,2.672,660,2.672,809,2.672,827,3.18,830,3.36,831,2.966,834,3.36,835,3.36,836,3.881,837,2.966,839,4.385,848,3.959,849,3.959,850,3.959,851,3.959,852,3.36]],["title/modules/SharedModule.html",[139,0.995,153,1.667]],["body/modules/SharedModule.html",[1,1.886,3,0.2,4,0.171,9,0.171,27,0.024,36,0.465,39,0.291,40,0.2,41,0.037,75,0.816,89,1.864,90,1.186,110,1.752,112,1.752,115,0.012,116,0.016,117,0.012,128,2.365,134,2.222,139,1.048,141,1.345,142,1.638,143,2.877,144,1.757,145,2.545,146,2.33,153,3.393,154,2.545,155,1.89,156,1.757,158,1.757,162,2.205,339,4.663,340,2.705,552,2.705,853,3.064,854,3.064,855,3.064,856,3.61,857,4.86,858,3.61,859,3.61,860,3.61,861,3.61]],["title/components/ShoppingEditComponent.html",[0,0.339,105,0.935]],["body/components/ShoppingEditComponent.html",[0,0.416,1,0.615,2,1.136,3,0.125,4,0.107,5,0.788,6,0.839,7,0.788,8,0.788,9,0.107,11,0.696,12,2.022,13,1.99,15,1.288,17,1.288,19,0.541,20,0.781,26,0.806,27,0.024,29,0.993,34,1.151,35,1.466,36,0.367,39,0.182,40,0.125,41,0.023,42,0.788,75,0.509,76,1.209,77,1.209,78,0.578,79,1.65,80,0.788,81,0.803,82,0.788,83,0.615,84,0.788,85,0.615,86,0.788,87,0.615,88,0.788,89,0.615,90,0.74,91,0.788,92,0.578,93,1.079,94,0.788,95,0.578,96,1.209,97,0.615,98,0.788,99,0.615,100,0.788,101,0.578,102,0.788,103,0.578,104,0.788,105,1.288,106,1.55,107,0.578,108,0.654,109,0.654,110,0.578,111,0.788,112,0.578,113,0.74,114,0.788,115,0.008,116,0.012,117,0.008,119,1.136,120,1.784,124,2.001,125,0.477,130,0.733,131,0.686,135,0.839,176,1.288,188,2.83,197,2.589,199,1.004,205,2.905,207,2.59,215,2.934,216,4.561,218,1.912,222,1.912,225,3.307,226,0.955,227,1.568,230,3.041,232,1.179,234,1.912,235,1.179,237,0.895,261,1.912,381,1.784,458,2.814,459,1.52,542,1.909,546,3.152,619,1.386,653,2.59,656,2.934,661,1.688,662,3.571,663,2.934,664,4.321,673,1.912,681,1.912,690,4.006,726,2.934,751,1.688,755,1.688,765,1.688,862,3.531,863,4.673,864,4.207,865,4.207,866,4.207,867,4.719,868,4.719,869,3.457,870,2.252,871,2.252,872,2.252,873,2.252,874,2.252,875,2.252,876,2.252,877,3.457,878,3.457,879,2.252,880,2.252,881,2.252,882,2.252,883,2.252,884,2.252,885,2.252,886,2.252,887,2.934,888,2.252,889,2.252,890,2.252,891,2.252,892,2.252,893,2.252,894,2.252,895,3.457,896,3.457]],["title/components/ShoppingListComponent.html",[0,0.339,107,0.879]],["body/components/ShoppingListComponent.html",[0,0.465,1,0.739,2,1.304,3,0.15,4,0.128,5,0.946,6,1.008,7,0.946,8,0.946,9,0.128,11,0.836,12,2.082,13,2.056,15,1.478,17,1.478,19,0.51,20,0.897,26,0.776,27,0.024,29,0.93,34,1.062,35,1.503,36,0.397,39,0.218,40,0.15,41,0.028,75,0.612,76,1.388,77,1.388,78,0.694,79,1.809,80,0.946,81,0.766,82,0.946,83,0.739,84,0.946,85,0.739,86,0.946,87,0.739,88,0.946,89,0.739,90,0.889,91,0.946,92,0.694,93,1.168,94,0.946,95,0.694,96,1.388,97,0.739,98,0.946,99,0.739,100,0.946,101,0.694,102,0.946,103,0.694,104,0.946,105,0.739,106,1.623,107,1.413,108,1.364,109,0.786,110,0.694,111,0.946,112,0.694,113,0.889,114,0.946,115,0.009,116,0.013,117,0.009,119,1.304,120,1.992,124,2.336,125,0.574,128,2.895,130,0.841,131,0.788,134,1.666,135,1.008,136,1.598,138,2.297,188,2.699,197,2.892,199,1.152,205,3.184,225,3.543,237,1.075,381,1.992,458,3.015,459,1.826,483,3.118,542,2.347,619,1.666,623,3.368,658,3.368,659,3.368,742,2.028,743,3.988,744,3.368,746,3.368,747,2.297,749,2.297,750,2.297,751,2.028,755,2.028,765,2.028,862,3.367,897,3.968,898,2.707,899,3.968,900,2.707,901,2.707,902,2.707]],["title/modules/ShoppingListModule.html",[139,0.995,903,2.312]],["body/modules/ShoppingListModule.html",[3,0.22,4,0.188,9,0.188,27,0.024,36,0.476,39,0.321,40,0.22,41,0.041,75,0.899,105,1.772,106,1.478,107,1.665,108,1.155,115,0.013,116,0.018,117,0.013,128,2.522,134,2.449,139,1.155,141,1.482,142,1.805,143,3.019,144,1.936,145,2.714,146,1.687,153,3.16,154,2.714,155,2.084,156,1.936,158,2.522,162,2.352,167,2.981,168,2.685,188,1.805,235,2.084,341,4.4,831,2.981,833,2.981,862,2.252,863,2.981,903,4.678,904,3.377,905,3.377,906,3.377,907,3.997,908,3.979]],["title/modules/ShoppingListRoutingModule.html",[139,0.995,907,2.109]],["body/modules/ShoppingListRoutingModule.html",[0,0.466,3,0.261,4,0.223,9,0.223,27,0.024,36,0.449,39,0.38,40,0.261,41,0.048,106,1.209,107,1.479,108,1.368,115,0.016,116,0.02,117,0.016,141,1.756,146,1.999,158,2.294,162,2.617,171,3.532,173,3.551,174,3.529,175,1.549,176,1.756,178,3.532,188,2.139,833,3.532,852,4.001,862,2.668,907,3.551]],["title/classes/ShoppingListService.html",[41,0.035,458,1.794]],["body/classes/ShoppingListService.html",[3,0.17,4,0.145,9,0.145,19,0.705,20,0.983,26,0.902,27,0.024,29,1.037,34,1.359,35,1.498,36,0.313,40,0.17,41,0.032,42,2.208,81,0.806,115,0.01,116,0.015,117,0.01,130,1.228,131,1.15,136,1.559,188,2.954,199,1.263,226,2.141,227,2.29,237,1.221,244,1.728,381,2.723,458,2.278,483,3.107,542,3.041,543,1.741,578,2.075,619,1.893,780,4.916,801,3.693,862,3.685,887,4.659,909,2.61,910,5.049,911,5.049,912,4.351,913,4.351,914,4.351,915,4.351,916,5.489,917,4.351,918,4.351,919,4.351,920,3.075,921,3.075,922,3.075,923,4.351,924,3.075,925,4.351,926,3.075,927,4.351,928,3.075,929,4.351,930,3.075,931,3.075,932,4.351,933,3.075,934,3.075,935,4.351,936,3.075,937,5.489,938,3.075,939,3.075]],["title/classes/User.html",[41,0.035,302,1.667]],["body/classes/User.html",[3,0.232,4,0.198,9,0.198,19,0.539,26,0.887,27,0.024,28,3.38,29,1.006,40,0.232,41,0.043,42,1.466,81,0.583,115,0.014,116,0.018,117,0.014,125,1.136,130,0.889,131,0.832,136,1.656,199,1.557,228,2.581,244,2.129,245,4.204,302,2.609,380,4.429,393,3.644,394,4.429,395,4.429,543,2.374,545,4.444,670,4.551,940,3.559,941,4.193,942,6.23,943,4.193,944,4.193,945,4.193,946,4.193,947,4.193,948,5.362,949,4.193]],["title/coverage.html",[950,3.981]],["body/coverage.html",[0,0.665,1,0.856,9,0.148,10,2.663,26,0.471,27,0.024,41,0.06,42,1.097,48,4.797,78,1.131,83,0.856,85,0.856,87,0.856,89,0.856,92,0.805,93,0.665,95,0.805,97,0.856,99,0.856,101,0.805,103,0.805,105,0.856,107,0.805,110,0.805,112,0.805,115,0.011,116,0.015,117,0.011,118,2.663,127,1.33,128,1.527,188,2.316,196,2.663,240,1.931,279,3.306,280,2.117,282,2.663,293,1.901,302,1.527,309,2.663,310,1.931,312,2.663,313,2.663,344,1.931,346,3.306,359,2.978,452,1.33,458,1.643,463,1.931,464,2.663,465,2.663,487,2.663,511,2.663,542,1.423,544,2.663,551,2.663,552,2.351,553,2.663,594,2.663,607,2.663,612,2.663,624,3.303,625,2.117,626,2.663,660,2.117,661,3.306,733,2.978,734,2.351,735,2.663,742,3.306,756,2.663,809,2.117,810,2.663,818,2.663,836,2.117,837,2.351,838,2.663,862,2.889,863,2.351,909,2.663,940,2.663,950,2.663,951,3.137,952,3.137,953,3.137,954,6.217,955,4.412,956,5.104,957,4.412,958,6.052,959,3.137,960,3.137,961,3.137,962,4.412,963,3.137,964,5.835,965,3.137,966,2.663,967,5.538,968,2.663,969,3.745,970,2.663,971,2.663,972,3.137,973,3.137]],["title/dependencies.html",[142,1.871,974,2.854]],["body/dependencies.html",[27,0.024,39,0.395,115,0.017,116,0.02,117,0.017,142,2.219,144,2.38,160,5.008,161,4.421,175,1.607,235,2.562,237,1.943,340,3.665,975,4.892,976,5.925,977,4.892,978,4.892,979,4.892,980,4.892,981,4.892,982,4.892,983,4.892,984,4.892]],["title/index.html",[19,0.367,985,2.854,986,2.854]],["body/index.html",[0,0.583,4,0.197,13,1.288,27,0.018,42,1.459,81,0.58,115,0.014,116,0.018,117,0.014,156,2.03,305,5.005,306,3.54,976,3.54,987,4.171,988,5.344,989,4.171,990,5.896,991,4.171,992,5.344,993,6.428,994,6.686,995,4.171,996,4.171,997,4.171,998,4.171,999,4.171,1000,4.171,1001,4.171,1002,4.171,1003,4.171,1004,4.171,1005,5.896,1006,5.896,1007,4.171,1008,6.428,1009,4.171,1010,4.171,1011,4.171,1012,4.171,1013,4.171,1014,4.171,1015,3.54,1016,5.344,1017,5.344,1018,6.217,1019,4.171,1020,5.344,1021,5.344,1022,4.171,1023,6.217,1024,4.171,1025,4.171,1026,4.171,1027,5.896,1028,4.171,1029,4.171,1030,4.171,1031,3.125,1032,4.171,1033,4.171,1034,4.171]],["title/modules.html",[141,1.747]],["body/modules.html",[27,0.02,115,0.016,116,0.02,117,0.016,140,3.27,141,1.805,151,2.982,152,2.982,153,2.358,161,5.114,334,3.27,823,3.27,827,2.982,903,3.27,907,2.982,1035,6.826,1036,6.826,1037,7.017,1038,6.31,1039,6.31]],["title/overview.html",[1031,3.514]],["body/overview.html",[1,1.688,2,1.012,27,0.024,75,0.697,83,1.688,85,1.379,87,1.379,89,1.688,92,1.296,95,1.296,97,1.379,99,1.379,101,1.296,103,1.296,105,1.379,107,1.296,109,0.895,110,1.586,112,1.586,115,0.01,116,0.015,117,0.01,139,0.895,140,4.525,141,1.148,142,1.398,143,1.614,144,1.499,145,1.614,146,1.307,147,2.616,148,2.616,149,2.616,150,2.616,151,3.11,152,3.807,153,3.354,154,2.281,155,1.614,156,1.499,174,1.744,281,2.309,310,3.11,334,4.06,335,2.616,337,2.616,344,1.896,434,2.079,450,2.616,451,2.616,452,2.143,543,1.744,578,2.079,707,2.616,823,4.651,824,2.616,825,2.616,826,2.616,827,3.11,853,2.616,854,2.616,855,2.616,903,4.395,904,2.616,905,2.616,906,2.616,907,3.11,1031,2.309,1040,3.081,1041,4.357,1042,3.081,1043,3.081,1044,3.081]],["title/routes.html",[174,2.655]],["body/routes.html",[27,0.022,115,0.019,116,0.022,117,0.019,174,3.155]],["title/miscellaneous/variables.html",[1045,2.422,1046,3.501]],["body/miscellaneous/variables.html",[19,0.606,26,0.975,27,0.024,115,0.016,116,0.02,117,0.016,226,2.644,227,2.828,230,2.668,232,3.021,359,4.384,966,4.001,968,4.001,969,4.001,970,4.897,971,4.897,1015,4.897,1045,4.001,1046,4.001,1047,5.769,1048,4.714,1049,4.714,1050,4.714,1051,4.714,1052,4.714,1053,5.769,1054,5.769,1055,5.769]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":48,"title":{},"body":{"components/AlertComponent.html":{},"components/LoadingSpinnerComponent.html":{},"guards/RecipesResolverService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":589,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.26",{"_index":70,"title":{},"body":{"components/AlertComponent.html":{}}}],["0.3s",{"_index":587,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.45s",{"_index":585,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.5",{"_index":577,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.75",{"_index":56,"title":{},"body":{"components/AlertComponent.html":{}}}],["0/1",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":578,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"injectables/RecipeService.html":{},"classes/ShoppingListService.html":{},"overview.html":{}}}],["1.2s",{"_index":574,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["1/3",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":65,"title":{},"body":{"components/AlertComponent.html":{},"components/LoadingSpinnerComponent.html":{}}}],["1000",{"_index":385,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["100vh",{"_index":53,"title":{},"body":{"components/AlertComponent.html":{}}}],["100vw",{"_index":51,"title":{},"body":{"components/AlertComponent.html":{}}}],["11.0.3",{"_index":976,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13",{"_index":1040,"title":{},"body":{"overview.html":{}}}],["143",{"_index":571,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["16",{"_index":1044,"title":{},"body":{"overview.html":{}}}],["16px",{"_index":64,"title":{},"body":{"components/AlertComponent.html":{}}}],["1px",{"_index":731,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["2",{"_index":1041,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["2.jpg",{"_index":790,"title":{},"body":{"injectables/RecipeService.html":{}}}],["20vw",{"_index":61,"title":{},"body":{"components/AlertComponent.html":{}}}],["2px",{"_index":68,"title":{},"body":{"components/AlertComponent.html":{}}}],["3",{"_index":1042,"title":{},"body":{"overview.html":{}}}],["3.4.1",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["30vh",{"_index":60,"title":{},"body":{"components/AlertComponent.html":{}}}],["33",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1043,"title":{},"body":{"overview.html":{}}}],["50",{"_index":58,"title":{},"body":{"components/AlertComponent.html":{},"components/LoadingSpinnerComponent.html":{}}}],["6.6.0",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["60vw",{"_index":62,"title":{},"body":{"components/AlertComponent.html":{}}}],["64px",{"_index":567,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["80px",{"_index":562,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["8px",{"_index":69,"title":{},"body":{"components/AlertComponent.html":{},"components/LoadingSpinnerComponent.html":{}}}],["9",{"_index":707,"title":{},"body":{"components/RecipeEditComponent.html":{},"overview.html":{}}}],["9]+[0",{"_index":706,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["_token",{"_index":394,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["_tokenexpirationdate",{"_index":395,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["a2cbf",{"_index":477,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["absolute",{"_index":566,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["accessors",{"_index":670,"title":{},"body":{"components/RecipeEditComponent.html":{},"classes/User.html":{}}}],["actions",{"_index":71,"title":{},"body":{"components/AlertComponent.html":{}}}],["activatedroute",{"_index":634,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{}}}],["activatedroutesnapshot",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecipesResolverService.html":{}}}],["actual_component",{"_index":114,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["add",{"_index":726,"title":{},"body":{"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["addingredient",{"_index":912,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["addingredient(ingredient",{"_index":923,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["addingredients",{"_index":913,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["addingredients(ingredients",{"_index":925,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["addingredientstoshoppinglist",{"_index":758,"title":{},"body":{"injectables/RecipeService.html":{}}}],["addingredientstoshoppinglist(ingredients",{"_index":767,"title":{},"body":{"injectables/RecipeService.html":{}}}],["addrecipe",{"_index":759,"title":{},"body":{"injectables/RecipeService.html":{}}}],["addrecipe(recipe",{"_index":769,"title":{},"body":{"injectables/RecipeService.html":{}}}],["aizasycnchjc8iklu8yyya3w6nhi89uvebxfv4e",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":14,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert'},{'name",{"_index":82,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["alert.component.css",{"_index":16,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.component.html",{"_index":18,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert/alert.component",{"_index":858,"title":{},"body":{"modules/SharedModule.html":{}}}],["alertcmpfactory",{"_index":264,"title":{},"body":{"components/AuthComponent.html":{}}}],["alertcomponent",{"_index":1,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alerthost",{"_index":200,"title":{},"body":{"components/AuthComponent.html":{}}}],["align",{"_index":73,"title":{},"body":{"components/AlertComponent.html":{}}}],["already",{"_index":428,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["amount",{"_index":546,"title":{},"body":{"classes/Ingredient.html":{},"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["angular",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["angular/animations",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{}}}],["angular/compiler",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":235,"title":{},"body":{"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/RecipeEditComponent.html":{},"modules/RecipesModule.html":{},"components/ShoppingEditComponent.html":{},"modules/ShoppingListModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/ShoppingListRoutingModule.html":{},"dependencies.html":{}}}],["animation",{"_index":573,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"index.html":{}}}],["app.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":83,"title":{"components/AppComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appdropdown",{"_index":488,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["appdropdown]'},{'name",{"_index":111,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["appmodule",{"_index":140,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appplaceholder",{"_index":113,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"directives/PlaceholderDirective.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["approutes",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":151,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arguments",{"_index":498,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["artifacts",{"_index":1009,"title":{},"body":{"index.html":{}}}],["auth",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{}}}],["auth'},{'name",{"_index":86,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["auth.component",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.component.html",{"_index":198,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.service",{"_index":241,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["auth/auth",{"_index":455,"title":{},"body":{"modules/CoreModule.html":{}}}],["auth/auth.guard",{"_index":848,"title":{},"body":{"modules/RecipesRoutingModule.html":{}}}],["auth/auth.service",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{}}}],["authcomponent",{"_index":85,"title":{"components/AuthComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticate",{"_index":537,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authguard",{"_index":280,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/RecipesRoutingModule.html":{},"coverage.html":{}}}],["authinterceptorservice",{"_index":310,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"interceptors/AuthInterceptorService.html":{},"modules/CoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":334,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobs",{"_index":250,"title":{},"body":{"components/AuthComponent.html":{}}}],["authobs.subscribe",{"_index":253,"title":{},"body":{"components/AuthComponent.html":{}}}],["authresponsedata",{"_index":240,"title":{"interfaces/AuthResponseData.html":{}},"body":{"components/AuthComponent.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authservice",{"_index":127,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["autologin",{"_index":391,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["autologout",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["autologout(expirationduration",{"_index":414,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["automatically",{"_index":999,"title":{},"body":{"index.html":{}}}],["available",{"_index":1039,"title":{},"body":{"modules.html":{}}}],["backdrop",{"_index":44,"title":{},"body":{"components/AlertComponent.html":{}}}],["background",{"_index":54,"title":{},"body":{"components/AlertComponent.html":{}}}],["behaviorsubject",{"_index":355,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["behaviorsubject(null",{"_index":361,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["bezier(0.5",{"_index":576,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["block",{"_index":560,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["book",{"_index":476,"title":{},"body":{"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{}}}],["boolean",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/RecipeEditComponent.html":{}}}],["bootstrap",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":565,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/RecipeEditComponent.html":{}}}],["box",{"_index":59,"title":{},"body":{"components/AlertComponent.html":{},"components/LoadingSpinnerComponent.html":{}}}],["bread",{"_index":794,"title":{},"body":{"injectables/RecipeService.html":{}}}],["break",{"_index":429,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["browse",{"_index":1037,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1008,"title":{},"body":{"index.html":{}}}],["bursa",{"_index":788,"title":{},"body":{"injectables/RecipeService.html":{}}}],["canactivate",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"modules/RecipesRoutingModule.html":{}}}],["canactivate(route",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":722,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["case",{"_index":425,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["catcherror",{"_index":357,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["catcherror(this.handleerror",{"_index":371,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["change",{"_index":1001,"title":{},"body":{"index.html":{}}}],["check",{"_index":1030,"title":{},"body":{"index.html":{}}}],["child(1",{"_index":583,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["child(2",{"_index":586,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["child(3",{"_index":588,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["children",{"_index":850,"title":{},"body":{"modules/RecipesRoutingModule.html":{}}}],["city",{"_index":787,"title":{},"body":{"injectables/RecipeService.html":{}}}],["class",{"_index":41,"title":{"classes/Ingredient.html":{},"classes/LoggingService.html":{},"classes/Recipe.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"coverage.html":{}}}],["class.open",{"_index":490,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["classes",{"_index":543,"title":{},"body":{"classes/Ingredient.html":{},"classes/LoggingService.html":{},"classes/Recipe.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":896,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["cleartimeout(this.tokenexpirationtimer",{"_index":413,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["cli",{"_index":990,"title":{},"body":{"index.html":{}}}],["close",{"_index":25,"title":{},"body":{"components/AlertComponent.html":{}}}],["closesub",{"_index":201,"title":{},"body":{"components/AuthComponent.html":{}}}],["cluster_appmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_coremodule",{"_index":450,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":451,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_recipesmodule",{"_index":824,"title":{},"body":{"modules/RecipesModule.html":{},"overview.html":{}}}],["cluster_recipesmodule_declarations",{"_index":826,"title":{},"body":{"modules/RecipesModule.html":{},"overview.html":{}}}],["cluster_recipesmodule_imports",{"_index":825,"title":{},"body":{"modules/RecipesModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":853,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":855,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":854,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_shoppinglistmodule",{"_index":904,"title":{},"body":{"modules/ShoppingListModule.html":{},"overview.html":{}}}],["cluster_shoppinglistmodule_declarations",{"_index":906,"title":{},"body":{"modules/ShoppingListModule.html":{},"overview.html":{}}}],["cluster_shoppinglistmodule_imports",{"_index":905,"title":{},"body":{"modules/ShoppingListModule.html":{},"overview.html":{}}}],["code",{"_index":1003,"title":{},"body":{"index.html":{}}}],["color",{"_index":580,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["command",{"_index":1032,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["component",{"_index":0,"title":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesRoutingModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":80,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["componentfactoryresolver",{"_index":211,"title":{},"body":{"components/AuthComponent.html":{}}}],["componentref",{"_index":269,"title":{},"body":{"components/AuthComponent.html":{}}}],["componentref.instance.close.subscribe",{"_index":272,"title":{},"body":{"components/AuthComponent.html":{}}}],["componentref.instance.message",{"_index":271,"title":{},"body":{"components/AuthComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"overview.html":{}}}],["console.log('current",{"_index":604,"title":{},"body":{"classes/LoggingService.html":{}}}],["console.log('last",{"_index":605,"title":{},"body":{"classes/LoggingService.html":{}}}],["console.log(errormessage",{"_index":258,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log(expirationduration",{"_index":415,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["console.log(respdata",{"_index":255,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log(response",{"_index":480,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["const",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"components/RecipeEditComponent.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"components/ShoppingEditComponent.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/User.html":{}}}],["constructor(authservice",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["constructor(datastorageservice",{"_index":520,"title":{},"body":{"components/HeaderComponent.html":{},"guards/RecipesResolverService.html":{}}}],["constructor(elref",{"_index":493,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["constructor(email",{"_index":941,"title":{},"body":{"classes/User.html":{}}}],["constructor(http",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataStorageService.html":{}}}],["constructor(name",{"_index":547,"title":{},"body":{"classes/Ingredient.html":{},"classes/Recipe.html":{}}}],["constructor(private",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"directives/DropdownDirective.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["constructor(public",{"_index":550,"title":{},"body":{"classes/Ingredient.html":{},"directives/PlaceholderDirective.html":{}}}],["constructor(recipeservice",{"_index":633,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeListComponent.html":{}}}],["constructor(route",{"_index":672,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["constructor(shoppinglistservice",{"_index":765,"title":{},"body":{"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["constructor(viewcontainerref",{"_index":609,"title":{},"body":{"directives/PlaceholderDirective.html":{}}}],["context",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":671,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["core.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":152,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":433,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["course",{"_index":475,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["courseproject",{"_index":987,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":950,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cubic",{"_index":575,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["data",{"_index":540,"title":{},"body":{"components/HeaderComponent.html":{}}}],["datastorageservice",{"_index":463,"title":{"injectables/DataStorageService.html":{}},"body":{"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"guards/RecipesResolverService.html":{},"coverage.html":{}}}],["date",{"_index":942,"title":{},"body":{"classes/User.html":{}}}],["date().gettime",{"_index":384,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["date(new",{"_index":383,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["date(userdata._tokenexpirationdate",{"_index":401,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["date(userdata._tokenexpirationdate).gettime",{"_index":405,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["declarations",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"overview.html":{}}}],["decorators",{"_index":222,"title":{},"body":{"components/AuthComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["default",{"_index":226,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/RecipeEditComponent.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"classes/ShoppingListService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{}}}],["delay",{"_index":584,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["delete",{"_index":656,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["deleteingredient",{"_index":914,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["deleteingredient(index",{"_index":927,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["deleterecipe",{"_index":760,"title":{},"body":{"injectables/RecipeService.html":{}}}],["deleterecipe(index",{"_index":771,"title":{},"body":{"injectables/RecipeService.html":{}}}],["delicious",{"_index":784,"title":{},"body":{"injectables/RecipeService.html":{}}}],["dependencies",{"_index":142,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":613,"title":{},"body":{"classes/Recipe.html":{},"components/RecipeEditComponent.html":{}}}],["detail",{"_index":627,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["detail'},{'name",{"_index":94,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["detail.component",{"_index":830,"title":{},"body":{"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{}}}],["detail.component.css",{"_index":628,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["detail.component.html",{"_index":629,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["detail.component.ts",{"_index":626,"title":{},"body":{"components/RecipeDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:12",{"_index":640,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["detail.component.ts:13",{"_index":635,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":636,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":637,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":639,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":638,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["detail/recipe",{"_index":625,"title":{},"body":{"components/RecipeDetailComponent.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"coverage.html":{}}}],["dev",{"_index":996,"title":{},"body":{"index.html":{}}}],["development",{"_index":991,"title":{},"body":{"index.html":{}}}],["directive",{"_index":78,"title":{"directives/DropdownDirective.html":{},"directives/PlaceholderDirective.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"directives/PlaceholderDirective.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{}}}],["directives",{"_index":109,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"directives/PlaceholderDirective.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1007,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1012,"title":{},"body":{"index.html":{}}}],["display",{"_index":558,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["displayname",{"_index":347,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["dist",{"_index":1011,"title":{},"body":{"index.html":{}}}],["div",{"_index":563,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["div:nth",{"_index":582,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["document:click",{"_index":492,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["document:click(eventdata",{"_index":500,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["documentation",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["dropdown.directive",{"_index":859,"title":{},"body":{"modules/SharedModule.html":{}}}],["dropdowndirective",{"_index":110,"title":{"directives/DropdownDirective.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamic",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":273,"title":{},"body":{"components/AuthComponent.html":{}}}],["e2e",{"_index":1024,"title":{},"body":{"index.html":{}}}],["edit",{"_index":653,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["edit'},{'name",{"_index":96,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["edit.component",{"_index":831,"title":{},"body":{"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/ShoppingListModule.html":{}}}],["edit.component.css",{"_index":662,"title":{},"body":{"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["edit.component.html",{"_index":663,"title":{},"body":{"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["edit.component.ts",{"_index":661,"title":{},"body":{"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:12",{"_index":682,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["edit.component.ts:13",{"_index":681,"title":{},"body":{"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:14",{"_index":673,"title":{},"body":{"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:15",{"_index":876,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:16",{"_index":875,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:17",{"_index":869,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:21",{"_index":871,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:22",{"_index":675,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["edit.component.ts:30",{"_index":680,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["edit.component.ts:35",{"_index":874,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:46",{"_index":677,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["edit.component.ts:48",{"_index":872,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:50",{"_index":685,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["edit.component.ts:53",{"_index":873,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:54",{"_index":676,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["edit.component.ts:59",{"_index":870,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["edit.component.ts:66",{"_index":679,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["edit.component.ts:70",{"_index":674,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["edit/recipe",{"_index":660,"title":{},"body":{"components/RecipeEditComponent.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"coverage.html":{}}}],["edit/shopping",{"_index":863,"title":{},"body":{"components/ShoppingEditComponent.html":{},"modules/ShoppingListModule.html":{},"coverage.html":{}}}],["editeditem",{"_index":864,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["editeditemindex",{"_index":865,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["editmode",{"_index":664,"title":{},"body":{"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["element",{"_index":77,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["elementref",{"_index":494,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["elref",{"_index":496,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["email",{"_index":245,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["email_exists",{"_index":426,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["email_not_found",{"_index":430,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["end",{"_index":1023,"title":{},"body":{"index.html":{}}}],["entrycomponents",{"_index":857,"title":{},"body":{"modules/SharedModule.html":{}}}],["environment",{"_index":359,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebaseapikey",{"_index":368,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["environments/environment",{"_index":360,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["error",{"_index":202,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["errormessage",{"_index":257,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["errorresp",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["errorresp.error",{"_index":421,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["errorresp.error.error",{"_index":422,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["errorresp.error.error.message",{"_index":424,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["event",{"_index":499,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["eventemitter",{"_index":31,"title":{},"body":{"components/AlertComponent.html":{}}}],["execute",{"_index":1020,"title":{},"body":{"index.html":{}}}],["exhaustmap",{"_index":324,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["exhaustmap((user",{"_index":326,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["exists",{"_index":427,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["expirationdate",{"_index":382,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["expirationduration",{"_index":404,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["expiresin",{"_index":348,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{}}}],["exports",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":230,"title":{},"body":{"components/AuthComponent.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{},"miscellaneous/variables.html":{}}}],["fetching",{"_index":541,"title":{},"body":{"components/HeaderComponent.html":{}}}],["fetchrecipes",{"_index":466,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"coverage.html":{}}}],["files",{"_index":1002,"title":{},"body":{"index.html":{}}}],["find",{"_index":431,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["firebaseapikey",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixed",{"_index":46,"title":{},"body":{"components/AlertComponent.html":{}}}],["flag",{"_index":1014,"title":{},"body":{"index.html":{}}}],["form",{"_index":218,"title":{},"body":{"components/AuthComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["form.reset",{"_index":261,"title":{},"body":{"components/AuthComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["form.valid",{"_index":243,"title":{},"body":{"components/AuthComponent.html":{}}}],["form.value",{"_index":886,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["form.value.email",{"_index":246,"title":{},"body":{"components/AuthComponent.html":{}}}],["form.value.password",{"_index":248,"title":{},"body":{"components/AuthComponent.html":{}}}],["formarray",{"_index":686,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["formcontrol",{"_index":687,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["formcontrol(ingredient.amount",{"_index":717,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["formcontrol(ingredient.name",{"_index":716,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["formcontrol(null",{"_index":703,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["formcontrol(recipedescription",{"_index":721,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["formcontrol(recipeimagepath",{"_index":720,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["formcontrol(recipename",{"_index":719,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["formgroup",{"_index":683,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["formsmodule",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"modules/ShoppingListModule.html":{}}}],["full",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1026,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1005,"title":{},"body":{"index.html":{}}}],["generated",{"_index":989,"title":{},"body":{"index.html":{}}}],["getcontrols",{"_index":684,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["getingredient",{"_index":915,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["getingredient(index",{"_index":929,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["getingredients",{"_index":916,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["getrecipe",{"_index":761,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrecipe(index",{"_index":773,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrecipes",{"_index":762,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getting",{"_index":985,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":946,"title":{},"body":{"classes/User.html":{}}}],["go",{"_index":1029,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1038,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":279,"title":{"guards/AuthGuard.html":{},"guards/RecipesResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecipesResolverService.html":{},"overview.html":{}}}],["handleauthentication",{"_index":378,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["handleauthentication(email",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleerror",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleerror(errorresp",{"_index":418,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["header",{"_index":512,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":88,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["header.component.css",{"_index":513,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":514,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":87,"title":{"components/HeaderComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":52,"title":{},"body":{"components/AlertComponent.html":{},"components/LoadingSpinnerComponent.html":{}}}],["help",{"_index":1027,"title":{},"body":{"index.html":{}}}],["hostbinding",{"_index":502,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["hostbinding('class.open",{"_index":504,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["hostbindings",{"_index":489,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["hostlistener",{"_index":503,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["hostlistener('click",{"_index":506,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["hostlistener('document:click",{"_index":509,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["hostlisteners",{"_index":491,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["hostviewcontainerref",{"_index":266,"title":{},"body":{"components/AuthComponent.html":{}}}],["hostviewcontainerref.clear",{"_index":268,"title":{},"body":{"components/AuthComponent.html":{}}}],["hostviewcontainerref.createcomponent(alertcmpfactory",{"_index":270,"title":{},"body":{"components/AuthComponent.html":{}}}],["html",{"_index":76,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["http",{"_index":363,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{}}}],["http://localhost:4200",{"_index":998,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":454,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":353,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{}}}],["httpclientmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":354,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["httphandler",{"_index":319,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpinterceptor",{"_index":322,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpparams",{"_index":323,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpparams().set('auth",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httprequest",{"_index":317,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["https://identitytoolkit.googleapis.com/v1/accounts:signinwithpassword?key",{"_index":408,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["https://identitytoolkit.googleapis.com/v1/accounts:signup?key",{"_index":367,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["https://ng",{"_index":474,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["https://upload.wikimedia.org/wikipedia/commons/0/05/%c4%b0neg%c3%b6l_k%c3%b6fte.jpg",{"_index":800,"title":{},"body":{"injectables/RecipeService.html":{}}}],["https://upload.wikimedia.org/wikipedia/commons/c/ce/iskender_kebap",{"_index":789,"title":{},"body":{"injectables/RecipeService.html":{}}}],["id",{"_index":393,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"modules/RecipesRoutingModule.html":{},"classes/User.html":{}}}],["id/edit",{"_index":851,"title":{},"body":{"modules/RecipesRoutingModule.html":{}}}],["identifier",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["idtoken",{"_index":349,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["image",{"_index":723,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["imagepath",{"_index":614,"title":{},"body":{"classes/Recipe.html":{},"components/RecipeEditComponent.html":{}}}],["implements",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/HeaderComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{}}}],["import('./auth/auth.module').then(m",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./recipes/recipes.module').then(m",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./shopping",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["inegöl",{"_index":798,"title":{},"body":{"injectables/RecipeService.html":{}}}],["infinite",{"_index":579,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{}}}],["ingredient",{"_index":542,"title":{"classes/Ingredient.html":{}},"body":{"classes/Ingredient.html":{},"classes/Recipe.html":{},"components/RecipeEditComponent.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"coverage.html":{}}}],["ingredient('bread",{"_index":802,"title":{},"body":{"injectables/RecipeService.html":{}}}],["ingredient('cow",{"_index":791,"title":{},"body":{"injectables/RecipeService.html":{}}}],["ingredient('lamb",{"_index":801,"title":{},"body":{"injectables/RecipeService.html":{},"classes/ShoppingListService.html":{}}}],["ingredient('pide",{"_index":793,"title":{},"body":{"injectables/RecipeService.html":{}}}],["ingredient('tomato",{"_index":796,"title":{},"body":{"injectables/RecipeService.html":{}}}],["ingredient('tomatoes',3",{"_index":918,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["ingredient('yoghurt",{"_index":795,"title":{},"body":{"injectables/RecipeService.html":{}}}],["ingredient(value.name",{"_index":888,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["ingredient.amount",{"_index":659,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/ShoppingListComponent.html":{}}}],["ingredient.name",{"_index":658,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/ShoppingListComponent.html":{}}}],["ingredients",{"_index":483,"title":{},"body":{"injectables/DataStorageService.html":{},"classes/Recipe.html":{},"components/RecipeEditComponent.html":{},"injectables/RecipeService.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{}}}],["ingredientschanged",{"_index":910,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["initform",{"_index":666,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["injectable",{"_index":293,"title":{"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"injectables/RecipeService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"classes/LoggingService.html":{},"injectables/RecipeService.html":{},"guards/RecipesResolverService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":602,"title":{},"body":{"classes/LoggingService.html":{},"guards/RecipesResolverService.html":{}}}],["injectables",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"injectables/RecipeService.html":{},"overview.html":{}}}],["inline",{"_index":559,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["input",{"_index":37,"title":{},"body":{"components/AlertComponent.html":{},"directives/DropdownDirective.html":{},"components/RecipeItemComponent.html":{}}}],["input.ng",{"_index":727,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["inputs",{"_index":22,"title":{},"body":{"components/AlertComponent.html":{},"components/RecipeItemComponent.html":{}}}],["intercept",{"_index":314,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["intercept(req",{"_index":316,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor",{"_index":309,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":456,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptor.service.ts",{"_index":313,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":315,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:15",{"_index":320,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptors",{"_index":311,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interface",{"_index":344,"title":{"interfaces/AuthResponseData.html":{}},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":345,"title":{},"body":{"interfaces/AuthResponseData.html":{}}}],["invalid.ng",{"_index":728,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["invalid_password",{"_index":432,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["isauth",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isauthenticated",{"_index":515,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iskender",{"_index":782,"title":{},"body":{"injectables/RecipeService.html":{}}}],["isloading",{"_index":203,"title":{},"body":{"components/AuthComponent.html":{}}}],["isloginmode",{"_index":204,"title":{},"body":{"components/AuthComponent.html":{}}}],["isopen",{"_index":505,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["item",{"_index":736,"title":{},"body":{"components/RecipeItemComponent.html":{}}}],["item'},{'name",{"_index":98,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["item.component",{"_index":832,"title":{},"body":{"modules/RecipesModule.html":{}}}],["item.component.css",{"_index":737,"title":{},"body":{"components/RecipeItemComponent.html":{}}}],["item.component.html",{"_index":738,"title":{},"body":{"components/RecipeItemComponent.html":{}}}],["item.component.ts",{"_index":735,"title":{},"body":{"components/RecipeItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:10",{"_index":740,"title":{},"body":{"components/RecipeItemComponent.html":{}}}],["item.component.ts:11",{"_index":739,"title":{},"body":{"components/RecipeItemComponent.html":{}}}],["item.component.ts:13",{"_index":741,"title":{},"body":{"components/RecipeItemComponent.html":{}}}],["item/recipe",{"_index":734,"title":{},"body":{"components/RecipeItemComponent.html":{},"modules/RecipesModule.html":{},"coverage.html":{}}}],["json.parse(localstorage.getitem('userdata",{"_index":396,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["json.stringify(user",{"_index":390,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["karma",{"_index":1022,"title":{},"body":{"index.html":{}}}],["kebab",{"_index":783,"title":{},"body":{"injectables/RecipeService.html":{}}}],["keyframes",{"_index":590,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["köfte",{"_index":799,"title":{},"body":{"injectables/RecipeService.html":{}}}],["lastlog",{"_index":595,"title":{},"body":{"classes/LoggingService.html":{}}}],["lds",{"_index":556,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["left",{"_index":49,"title":{},"body":{"components/AlertComponent.html":{}}}],["legend",{"_index":75,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"overview.html":{}}}],["list",{"_index":108,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["list'},{'name",{"_index":100,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["list.component",{"_index":833,"title":{},"body":{"modules/RecipesModule.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["list.component.css",{"_index":743,"title":{},"body":{"components/RecipeListComponent.html":{},"components/ShoppingListComponent.html":{}}}],["list.component.html",{"_index":744,"title":{},"body":{"components/RecipeListComponent.html":{},"components/ShoppingListComponent.html":{}}}],["list.component.ts",{"_index":742,"title":{},"body":{"components/RecipeListComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":750,"title":{},"body":{"components/RecipeListComponent.html":{},"components/ShoppingListComponent.html":{}}}],["list.component.ts:14",{"_index":746,"title":{},"body":{"components/RecipeListComponent.html":{},"components/ShoppingListComponent.html":{}}}],["list.component.ts:19",{"_index":898,"title":{},"body":{"components/ShoppingListComponent.html":{}}}],["list.component.ts:20",{"_index":748,"title":{},"body":{"components/RecipeListComponent.html":{}}}],["list.component.ts:29",{"_index":749,"title":{},"body":{"components/RecipeListComponent.html":{},"components/ShoppingListComponent.html":{}}}],["list.component.ts:33",{"_index":747,"title":{},"body":{"components/RecipeListComponent.html":{},"components/ShoppingListComponent.html":{}}}],["list.module').then(m",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["list.module.ts",{"_index":908,"title":{},"body":{"modules/ShoppingListModule.html":{}}}],["list.service",{"_index":459,"title":{},"body":{"modules/CoreModule.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["list.service.ts",{"_index":909,"title":{},"body":{"classes/ShoppingListService.html":{},"coverage.html":{}}}],["list.service.ts:13",{"_index":931,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["list.service.ts:17",{"_index":930,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["list.service.ts:21",{"_index":924,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["list.service.ts:26",{"_index":926,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["list.service.ts:31",{"_index":933,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["list.service.ts:36",{"_index":928,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["list.service.ts:5",{"_index":921,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["list.service.ts:6",{"_index":922,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["list.service.ts:8",{"_index":920,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["list/recipe",{"_index":733,"title":{},"body":{"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"modules/RecipesModule.html":{},"coverage.html":{}}}],["list/shopping",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"coverage.html":{}}}],["literal",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadeduser",{"_index":397,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["loadeduser.token",{"_index":402,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["loading",{"_index":90,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["loadingspinnercomponent",{"_index":89,"title":{"components/LoadingSpinnerComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["localid",{"_index":350,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["localstorage.removeitem('userdata",{"_index":411,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["localstorage.setitem('userdata",{"_index":389,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["log",{"_index":601,"title":{},"body":{"classes/LoggingService.html":{}}}],["logging.service",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{}}}],["loggingservice",{"_index":128,"title":{"classes/LoggingService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/LoggingService.html":{},"modules/SharedModule.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"coverage.html":{}}}],["login",{"_index":275,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["login(email",{"_index":407,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["logout",{"_index":409,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["m.authmodule",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.recipesmodule",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.shoppinglistmodule",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":274,"title":{},"body":{"components/AuthComponent.html":{}}}],["manage",{"_index":538,"title":{},"body":{"components/HeaderComponent.html":{},"components/RecipeDetailComponent.html":{}}}],["map",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DataStorageService.html":{}}}],["map((recipes",{"_index":481,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["map((user",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{}}}],["margin",{"_index":568,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["matching",{"_index":116,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["meal",{"_index":785,"title":{},"body":{"injectables/RecipeService.html":{}}}],["meat",{"_index":792,"title":{},"body":{"injectables/RecipeService.html":{}}}],["meat',1",{"_index":919,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["message",{"_index":23,"title":{},"body":{"components/AlertComponent.html":{},"components/AuthComponent.html":{},"classes/LoggingService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"directives/PlaceholderDirective.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["methods",{"_index":20,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"classes/LoggingService.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{}}}],["miscellaneous",{"_index":1045,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modifiedreq",{"_index":328,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["module",{"_index":139,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"overview.html":{}}}],["modules",{"_index":141,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1028,"title":{},"body":{"index.html":{}}}],["multi",{"_index":462,"title":{},"body":{"modules/CoreModule.html":{}}}],["name",{"_index":81,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"index.html":{}}}],["navigate",{"_index":997,"title":{},"body":{"index.html":{}}}],["new",{"_index":42,"title":{},"body":{"components/AlertComponent.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"modules/RecipesRoutingModule.html":{},"components/ShoppingEditComponent.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["newingredient",{"_index":887,"title":{},"body":{"components/ShoppingEditComponent.html":{},"classes/ShoppingListService.html":{}}}],["newrecipe",{"_index":692,"title":{},"body":{"components/RecipeEditComponent.html":{},"injectables/RecipeService.html":{}}}],["next",{"_index":318,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["next.handle(modifiedreq",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["next.handle(req",{"_index":327,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["ng",{"_index":994,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":216,"title":{},"body":{"components/AuthComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["ngmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["ngondestroy",{"_index":205,"title":{},"body":{"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/RecipeListComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["ngoninit",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["null",{"_index":228,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/RecipeEditComponent.html":{},"classes/User.html":{}}}],["number",{"_index":381,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"classes/Ingredient.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{}}}],["object",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":236,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{}}}],["occured",{"_index":420,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["older",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{}}}],["onaddingredient",{"_index":667,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["onaddtoshoppinglist",{"_index":630,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["oncancel",{"_index":668,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["onclear",{"_index":867,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["onclose",{"_index":21,"title":{},"body":{"components/AlertComponent.html":{}}}],["ondelete",{"_index":868,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["ondeleteingredient",{"_index":669,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["ondeleteingredient(index",{"_index":678,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["ondeleterecipe",{"_index":631,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["ondestroy",{"_index":197,"title":{},"body":{"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/RecipeListComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["onedititem",{"_index":897,"title":{},"body":{"components/ShoppingListComponent.html":{}}}],["onedititem(index",{"_index":899,"title":{},"body":{"components/ShoppingListComponent.html":{}}}],["oneditrecipe",{"_index":632,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["onfetchdata",{"_index":517,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onhandleerror",{"_index":206,"title":{},"body":{"components/AuthComponent.html":{}}}],["oninit",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["onlogout",{"_index":518,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onnewrecipe",{"_index":745,"title":{},"body":{"components/RecipeListComponent.html":{}}}],["onsavedata",{"_index":519,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onsubmit",{"_index":207,"title":{},"body":{"components/AuthComponent.html":{},"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["onsubmit(form",{"_index":215,"title":{},"body":{"components/AuthComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["onswitchmode",{"_index":208,"title":{},"body":{"components/AuthComponent.html":{}}}],["optional",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{}}}],["out",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":38,"title":{},"body":{"components/AlertComponent.html":{}}}],["outputs",{"_index":24,"title":{},"body":{"components/AlertComponent.html":{}}}],["overview",{"_index":1031,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":974,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":63,"title":{},"body":{"components/AlertComponent.html":{}}}],["page",{"_index":1034,"title":{},"body":{"index.html":{}}}],["param",{"_index":603,"title":{},"body":{"classes/LoggingService.html":{}}}],["parameters",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{}}}],["params",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{}}}],["params['id",{"_index":645,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{}}}],["password",{"_index":247,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["path",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["pathmatch",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":370,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{}}}],["placeholder/placeholder.directive",{"_index":861,"title":{},"body":{"modules/SharedModule.html":{}}}],["placeholderdirective",{"_index":112,"title":{"directives/PlaceholderDirective.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"directives/PlaceholderDirective.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":816,"title":{},"body":{"components/RecipeStartComponent.html":{}}}],["position",{"_index":45,"title":{},"body":{"components/AlertComponent.html":{},"components/LoadingSpinnerComponent.html":{}}}],["post",{"_index":366,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["preloadallmodules",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["print",{"_index":600,"title":{},"body":{"classes/LoggingService.html":{}}}],["printlog",{"_index":596,"title":{},"body":{"classes/LoggingService.html":{}}}],["printlog(message",{"_index":598,"title":{},"body":{"classes/LoggingService.html":{}}}],["private",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{}}}],["prod",{"_index":1013,"title":{},"body":{"index.html":{}}}],["production",{"_index":1015,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":988,"title":{},"body":{"index.html":{}}}],["promise",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":199,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{}}}],["protractor",{"_index":1025,"title":{},"body":{"index.html":{}}}],["provide",{"_index":460,"title":{},"body":{"modules/CoreModule.html":{}}}],["providedin",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{}}}],["providers",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"overview.html":{}}}],["public",{"_index":545,"title":{},"body":{"classes/Ingredient.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"classes/User.html":{}}}],["put",{"_index":473,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["radius",{"_index":572,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["reactiveformsmodule",{"_index":829,"title":{},"body":{"modules/RecipesModule.html":{}}}],["recipe",{"_index":93,"title":{"classes/Recipe.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{}}}],["recipe.description",{"_index":657,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{}}}],["recipe.imagepath",{"_index":713,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["recipe.ingredients",{"_index":484,"title":{},"body":{"injectables/DataStorageService.html":{},"components/RecipeEditComponent.html":{}}}],["recipe.model",{"_index":641,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"guards/RecipesResolverService.html":{}}}],["recipe.name",{"_index":655,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{}}}],["recipe.service",{"_index":642,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"guards/RecipesResolverService.html":{}}}],["recipe['ingredients",{"_index":714,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["recipedescription",{"_index":711,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["recipedetailcomponent",{"_index":92,"title":{"components/RecipeDetailComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipeeditcomponent",{"_index":95,"title":{"components/RecipeEditComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipeform",{"_index":665,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["recipeimagepath",{"_index":710,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["recipeingredients",{"_index":712,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["recipeingredients.push",{"_index":715,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["recipeitemcomponent",{"_index":97,"title":{"components/RecipeItemComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipelistcomponent",{"_index":99,"title":{"components/RecipeListComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipename",{"_index":709,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["recipes",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{}}}],["recipes'},{'name",{"_index":102,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["recipes.component",{"_index":835,"title":{},"body":{"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{}}}],["recipes.component.css",{"_index":819,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipes.component.html",{"_index":820,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipes.length",{"_index":846,"title":{},"body":{"guards/RecipesResolverService.html":{}}}],["recipes.map((recipe",{"_index":482,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["recipes/recipe.model",{"_index":471,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["recipes/recipe.service",{"_index":457,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DataStorageService.html":{}}}],["recipes/recipes.module#recipesmodule",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["recipeschanged",{"_index":757,"title":{},"body":{"injectables/RecipeService.html":{}}}],["recipescomponent",{"_index":101,"title":{"components/RecipesComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipeservice",{"_index":452,"title":{"injectables/RecipeService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"guards/RecipesResolverService.html":{},"coverage.html":{},"overview.html":{}}}],["recipesmodule",{"_index":823,"title":{"modules/RecipesModule.html":{}},"body":{"modules/RecipesModule.html":{},"modules.html":{},"overview.html":{}}}],["recipesresolverservice",{"_index":836,"title":{"guards/RecipesResolverService.html":{}},"body":{"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"coverage.html":{}}}],["recipesroutingmodule",{"_index":827,"title":{"modules/RecipesRoutingModule.html":{}},"body":{"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["recipesservice",{"_index":840,"title":{},"body":{"guards/RecipesResolverService.html":{}}}],["recipestartcomponent",{"_index":103,"title":{"components/RecipeStartComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["red",{"_index":732,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["redirectto",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1033,"title":{},"body":{"index.html":{}}}],["refreshtoken",{"_index":351,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["registered",{"_index":352,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["relative",{"_index":561,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["relativeto",{"_index":650,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{}}}],["reload",{"_index":1000,"title":{},"body":{"index.html":{}}}],["req",{"_index":321,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.clone",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["require",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resdata.email",{"_index":374,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["resdata.expiresin",{"_index":377,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["resdata.idtoken",{"_index":376,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["resdata.localid",{"_index":375,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["reset",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"overview.html":{}}}],["resolve",{"_index":839,"title":{},"body":{"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{}}}],["resolve(route",{"_index":842,"title":{},"body":{"guards/RecipesResolverService.html":{}}}],["resolver.service",{"_index":849,"title":{},"body":{"modules/RecipesRoutingModule.html":{}}}],["resolver.service.ts",{"_index":838,"title":{},"body":{"guards/RecipesResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:11",{"_index":844,"title":{},"body":{"guards/RecipesResolverService.html":{}}}],["resolver.service.ts:8",{"_index":841,"title":{},"body":{"guards/RecipesResolverService.html":{}}}],["respdata",{"_index":254,"title":{},"body":{"components/AuthComponent.html":{}}}],["result",{"_index":115,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":117,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":244,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"components/RecipeEditComponent.html":{},"injectables/RecipeService.html":{},"guards/RecipesResolverService.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{}}}],["returns",{"_index":34,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"classes/LoggingService.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{}}}],["returnsecuretoken",{"_index":369,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["rgb(143",{"_index":570,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["rgba(0",{"_index":55,"title":{},"body":{"components/AlertComponent.html":{}}}],["right",{"_index":74,"title":{},"body":{"components/AlertComponent.html":{}}}],["ring",{"_index":557,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["root",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"classes/LoggingService.html":{},"guards/RecipesResolverService.html":{}}}],["root'},{'name",{"_index":84,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["rotate(0deg",{"_index":592,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["rotate(360deg",{"_index":593,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["route",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{},"guards/RecipesResolverService.html":{}}}],["router",{"_index":210,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{}}}],["routermodule",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["routermodule.forchild([{path",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{}}}],["routermodule.forchild(routes",{"_index":852,"title":{},"body":{"modules/RecipesRoutingModule.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecipesResolverService.html":{}}}],["routes",{"_index":174,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/ShoppingListRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/RecipesModule.html":{},"modules/ShoppingListModule.html":{}}}],["routing.module.ts",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/RecipesRoutingModule.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["rtdb.firebaseio.com/recipes.json",{"_index":478,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["run",{"_index":993,"title":{},"body":{"index.html":{}}}],["running",{"_index":1016,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":237,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{}}}],["sauce",{"_index":797,"title":{},"body":{"injectables/RecipeService.html":{}}}],["save",{"_index":539,"title":{},"body":{"components/HeaderComponent.html":{},"components/RecipeEditComponent.html":{}}}],["scaffolding",{"_index":1004,"title":{},"body":{"index.html":{}}}],["select",{"_index":817,"title":{},"body":{"components/RecipeStartComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"directives/PlaceholderDirective.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["serve",{"_index":995,"title":{},"body":{"index.html":{}}}],["server",{"_index":992,"title":{},"body":{"index.html":{}}}],["setrecipes",{"_index":763,"title":{},"body":{"injectables/RecipeService.html":{}}}],["setrecipes(recipes",{"_index":776,"title":{},"body":{"injectables/RecipeService.html":{}}}],["settimeout",{"_index":416,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["shadow",{"_index":67,"title":{},"body":{"components/AlertComponent.html":{}}}],["shared/alert/alert.component",{"_index":238,"title":{},"body":{"components/AuthComponent.html":{}}}],["shared/data",{"_index":528,"title":{},"body":{"components/HeaderComponent.html":{},"guards/RecipesResolverService.html":{}}}],["shared/ingredient.model",{"_index":619,"title":{},"body":{"classes/Recipe.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{}}}],["shared/placeholder/placeholder.directive",{"_index":239,"title":{},"body":{"components/AuthComponent.html":{}}}],["shared/shared.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RecipesModule.html":{},"modules/ShoppingListModule.html":{}}}],["sharedmodule",{"_index":153,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"modules.html":{},"overview.html":{}}}],["shopping",{"_index":106,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/CoreModule.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{}}}],["shoppingeditcomponent",{"_index":105,"title":{"components/ShoppingEditComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"coverage.html":{},"overview.html":{}}}],["shoppinglistcomponent",{"_index":107,"title":{"components/ShoppingListComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["shoppinglistform",{"_index":866,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["shoppinglistmodule",{"_index":903,"title":{"modules/ShoppingListModule.html":{}},"body":{"modules/ShoppingListModule.html":{},"modules.html":{},"overview.html":{}}}],["shoppinglistroutingmodule",{"_index":907,"title":{"modules/ShoppingListRoutingModule.html":{}},"body":{"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["shoppinglistservice",{"_index":458,"title":{"classes/ShoppingListService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"coverage.html":{}}}],["showerroralert",{"_index":209,"title":{},"body":{"components/AuthComponent.html":{}}}],["showerroralert(message",{"_index":220,"title":{},"body":{"components/AuthComponent.html":{}}}],["sign",{"_index":276,"title":{},"body":{"components/AuthComponent.html":{}}}],["signup",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(email",{"_index":364,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["sizing",{"_index":564,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["solid",{"_index":569,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/RecipeEditComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"components/LoadingSpinnerComponent.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"modules/RecipesModule.html":{},"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"modules/SharedModule.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"index.html":{}}}],["spec\\.ts",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":554,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":91,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["spinner.component",{"_index":860,"title":{},"body":{"modules/SharedModule.html":{}}}],["spinner.component.css",{"_index":555,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":553,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["spinner/loading",{"_index":552,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["src/.../environment.prod.ts",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":312,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts",{"_index":196,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:14",{"_index":233,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:15",{"_index":231,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:16",{"_index":229,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:17",{"_index":224,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:18",{"_index":212,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:27",{"_index":219,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:31",{"_index":217,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:66",{"_index":214,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:70",{"_index":213,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:76",{"_index":221,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:14",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:17",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.module.ts",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":346,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:111",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:122",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:130",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:22",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:26",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:49",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:62",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:88",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/user.model.ts",{"_index":940,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/auth/user.model.ts:1",{"_index":943,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:3",{"_index":944,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:4",{"_index":945,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:9",{"_index":947,"title":{},"body":{"classes/User.html":{}}}],["src/app/core.module.ts",{"_index":453,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/header/header.component.ts",{"_index":511,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:12",{"_index":527,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:13",{"_index":521,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:20",{"_index":523,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:26",{"_index":522,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:30",{"_index":525,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:34",{"_index":526,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:38",{"_index":524,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/logging.service.ts",{"_index":594,"title":{},"body":{"classes/LoggingService.html":{},"coverage.html":{}}}],["src/app/logging.service.ts:11",{"_index":599,"title":{},"body":{"classes/LoggingService.html":{}}}],["src/app/logging.service.ts:5",{"_index":597,"title":{},"body":{"classes/LoggingService.html":{}}}],["src/app/recipes/recipe",{"_index":624,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"coverage.html":{}}}],["src/app/recipes/recipe.model.ts",{"_index":612,"title":{},"body":{"classes/Recipe.html":{},"coverage.html":{}}}],["src/app/recipes/recipe.model.ts:4",{"_index":618,"title":{},"body":{"classes/Recipe.html":{}}}],["src/app/recipes/recipe.model.ts:5",{"_index":616,"title":{},"body":{"classes/Recipe.html":{}}}],["src/app/recipes/recipe.model.ts:6",{"_index":617,"title":{},"body":{"classes/Recipe.html":{}}}],["src/app/recipes/recipe.model.ts:7",{"_index":615,"title":{},"body":{"classes/Recipe.html":{}}}],["src/app/recipes/recipe.service.ts",{"_index":756,"title":{},"body":{"injectables/RecipeService.html":{},"coverage.html":{}}}],["src/app/recipes/recipe.service.ts:11",{"_index":766,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/recipes/recipe.service.ts:39",{"_index":777,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/recipes/recipe.service.ts:44",{"_index":775,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/recipes/recipe.service.ts:48",{"_index":774,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/recipes/recipe.service.ts:52",{"_index":768,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/recipes/recipe.service.ts:56",{"_index":770,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/recipes/recipe.service.ts:61",{"_index":779,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/recipes/recipe.service.ts:66",{"_index":772,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/recipes/recipe.service.ts:9",{"_index":781,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/recipes/recipes",{"_index":837,"title":{},"body":{"guards/RecipesResolverService.html":{},"modules/RecipesRoutingModule.html":{},"coverage.html":{}}}],["src/app/recipes/recipes.component.ts",{"_index":818,"title":{},"body":{"components/RecipesComponent.html":{},"coverage.html":{}}}],["src/app/recipes/recipes.component.ts:12",{"_index":822,"title":{},"body":{"components/RecipesComponent.html":{}}}],["src/app/recipes/recipes.component.ts:8",{"_index":821,"title":{},"body":{"components/RecipesComponent.html":{}}}],["src/app/recipes/recipes.module.ts",{"_index":828,"title":{},"body":{"modules/RecipesModule.html":{}}}],["src/app/shared/alert/alert.component.ts",{"_index":10,"title":{},"body":{"components/AlertComponent.html":{},"coverage.html":{}}}],["src/app/shared/alert/alert.component.ts:11",{"_index":30,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/shared/alert/alert.component.ts:12",{"_index":32,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/shared/alert/alert.component.ts:14",{"_index":33,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/shared/data",{"_index":464,"title":{},"body":{"injectables/DataStorageService.html":{},"coverage.html":{}}}],["src/app/shared/dropdown.directive.ts",{"_index":487,"title":{},"body":{"directives/DropdownDirective.html":{},"coverage.html":{}}}],["src/app/shared/dropdown.directive.ts:14",{"_index":501,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["src/app/shared/dropdown.directive.ts:16",{"_index":495,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["src/app/shared/dropdown.directive.ts:8",{"_index":497,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["src/app/shared/ingredient.model.ts",{"_index":544,"title":{},"body":{"classes/Ingredient.html":{},"coverage.html":{}}}],["src/app/shared/ingredient.model.ts:1",{"_index":548,"title":{},"body":{"classes/Ingredient.html":{}}}],["src/app/shared/ingredient.model.ts:3",{"_index":549,"title":{},"body":{"classes/Ingredient.html":{}}}],["src/app/shared/loading",{"_index":551,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["src/app/shared/placeholder/placeholder.directive.ts",{"_index":607,"title":{},"body":{"directives/PlaceholderDirective.html":{},"coverage.html":{}}}],["src/app/shared/placeholder/placeholder.directive.ts:6",{"_index":610,"title":{},"body":{"directives/PlaceholderDirective.html":{}}}],["src/app/shared/placeholder/placeholder.directive.ts:7",{"_index":611,"title":{},"body":{"directives/PlaceholderDirective.html":{}}}],["src/app/shared/shared.module.ts",{"_index":856,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shopping",{"_index":862,"title":{},"body":{"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"modules/ShoppingListModule.html":{},"modules/ShoppingListRoutingModule.html":{},"classes/ShoppingListService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":811,"title":{},"body":{"components/RecipeStartComponent.html":{}}}],["start'},{'name",{"_index":104,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["start.component",{"_index":834,"title":{},"body":{"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{}}}],["start.component.css",{"_index":812,"title":{},"body":{"components/RecipeStartComponent.html":{}}}],["start.component.html",{"_index":813,"title":{},"body":{"components/RecipeStartComponent.html":{}}}],["start.component.ts",{"_index":810,"title":{},"body":{"components/RecipeStartComponent.html":{},"coverage.html":{}}}],["start.component.ts:12",{"_index":815,"title":{},"body":{"components/RecipeStartComponent.html":{}}}],["start.component.ts:8",{"_index":814,"title":{},"body":{"components/RecipeStartComponent.html":{}}}],["start/recipe",{"_index":809,"title":{},"body":{"components/RecipeStartComponent.html":{},"modules/RecipesModule.html":{},"modules/RecipesRoutingModule.html":{},"coverage.html":{}}}],["started",{"_index":986,"title":{"index.html":{}},"body":{}}],["startedediting",{"_index":911,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["state",{"_index":843,"title":{},"body":{"guards/RecipesResolverService.html":{}}}],["statements",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":878,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["storage.service",{"_index":529,"title":{},"body":{"components/HeaderComponent.html":{},"guards/RecipesResolverService.html":{}}}],["storage.service.ts",{"_index":465,"title":{},"body":{"injectables/DataStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:16",{"_index":470,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["storage.service.ts:29",{"_index":469,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["storage.service.ts:9",{"_index":468,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["stored",{"_index":1010,"title":{},"body":{"index.html":{}}}],["storerecipes",{"_index":467,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AlertComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"classes/Ingredient.html":{},"classes/LoggingService.html":{},"classes/Recipe.html":{},"classes/User.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["subject",{"_index":780,"title":{},"body":{"injectables/RecipeService.html":{},"classes/ShoppingListService.html":{}}}],["subscribe((response",{"_index":479,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["subscription",{"_index":225,"title":{},"body":{"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/RecipeListComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["support",{"_index":1035,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1036,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":278,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["table",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["take(1",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["tap",{"_index":325,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{}}}],["tap((recipes",{"_index":485,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["tap((resdata",{"_index":372,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["tap(isauth",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["test",{"_index":1019,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1018,"title":{},"body":{"index.html":{}}}],["text",{"_index":72,"title":{},"body":{"components/AlertComponent.html":{}}}],["textarea.ng",{"_index":730,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this._token",{"_index":949,"title":{},"body":{"classes/User.html":{}}}],["this._tokenexpirationdate",{"_index":948,"title":{},"body":{"classes/User.html":{}}}],["this.alerthost.viewcontainerref",{"_index":267,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.autologin",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.login(email",{"_index":251,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.logout",{"_index":534,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.signup(email",{"_index":252,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.user.pipe",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["this.authservice.user.subscribe(user",{"_index":531,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.autologout(expirationduration",{"_index":406,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["this.autologout(expiresin",{"_index":388,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["this.close.emit",{"_index":43,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.closesub",{"_index":262,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.closesub.unsubscribe",{"_index":263,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory",{"_index":265,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.datastorageservice.fetchrecipes",{"_index":847,"title":{},"body":{"guards/RecipesResolverService.html":{}}}],["this.datastorageservice.fetchrecipes().subscribe",{"_index":536,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.datastorageservice.storerecipes",{"_index":535,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.description",{"_index":621,"title":{},"body":{"classes/Recipe.html":{}}}],["this.editeditem",{"_index":881,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.editeditem.amount",{"_index":885,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.editeditem.name",{"_index":884,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.editeditemindex",{"_index":880,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.editmode",{"_index":690,"title":{},"body":{"components/RecipeEditComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["this.elref.nativeelement.contains(eventdata.target",{"_index":510,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["this.error",{"_index":259,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.handleauthentication",{"_index":373,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["this.http",{"_index":365,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{}}}],["this.id",{"_index":644,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{}}}],["this.imagepath",{"_index":622,"title":{},"body":{"classes/Recipe.html":{}}}],["this.ingredients",{"_index":623,"title":{},"body":{"classes/Recipe.html":{},"components/ShoppingListComponent.html":{}}}],["this.ingredients.push(...ingredients",{"_index":938,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["this.ingredients.push(ingredient",{"_index":936,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["this.ingredients.slice",{"_index":934,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["this.ingredients.splice(index",{"_index":939,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["this.ingredients[index",{"_index":935,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["this.ingredientschanged.next(this.ingredients.slice",{"_index":937,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["this.initform",{"_index":691,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.isauthenticated",{"_index":532,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isloading",{"_index":249,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.isloginmode",{"_index":242,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.isopen",{"_index":508,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["this.lastlog",{"_index":606,"title":{},"body":{"classes/LoggingService.html":{}}}],["this.loggingservice.printlog('hello",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ShoppingListComponent.html":{}}}],["this.logout",{"_index":417,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["this.name",{"_index":620,"title":{},"body":{"classes/Recipe.html":{}}}],["this.oncancel",{"_index":700,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.onclear",{"_index":894,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.recipe",{"_index":646,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["this.recipeform",{"_index":718,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipeform.get('ingredients')).controls",{"_index":701,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipeform.get('ingredients')).push",{"_index":702,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipeform.get('ingredients')).removeat(index",{"_index":708,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipeform.value",{"_index":698,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipeform.value['description",{"_index":694,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipeform.value['imagepath",{"_index":695,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipeform.value['ingredients",{"_index":696,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipeform.value['name",{"_index":693,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipes",{"_index":753,"title":{},"body":{"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{}}}],["this.recipes.push(recipe",{"_index":807,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipes.slice",{"_index":804,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipes.splice(index",{"_index":808,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipes[index",{"_index":805,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipeschanged.next(this.recipes.slice",{"_index":803,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipeservice.addingredientstoshoppinglist(this.recipe.ingredients",{"_index":648,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["this.recipeservice.addrecipe(this.recipeform.value",{"_index":699,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipeservice.deleterecipe(this.id",{"_index":654,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["this.recipeservice.getrecipe(this.id",{"_index":647,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{}}}],["this.recipeservice.getrecipes",{"_index":472,"title":{},"body":{"injectables/DataStorageService.html":{},"components/RecipeListComponent.html":{}}}],["this.recipeservice.recipeschanged.subscribe",{"_index":752,"title":{},"body":{"components/RecipeListComponent.html":{}}}],["this.recipeservice.setrecipes(recipes",{"_index":486,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["this.recipeservice.updaterecipe(this.id",{"_index":697,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.recipesservice.getrecipes",{"_index":845,"title":{},"body":{"guards/RecipesResolverService.html":{}}}],["this.route",{"_index":651,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeListComponent.html":{}}}],["this.route.params.subscribe",{"_index":643,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":689,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["this.router.createurltree(['/auth",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate",{"_index":652,"title":{},"body":{"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/recipes",{"_index":256,"title":{},"body":{"components/AuthComponent.html":{},"components/RecipeDetailComponent.html":{}}}],["this.router.navigate(['edit",{"_index":649,"title":{},"body":{"components/RecipeDetailComponent.html":{}}}],["this.router.navigate(['new",{"_index":754,"title":{},"body":{"components/RecipeListComponent.html":{}}}],["this.shoppinglistform.reset",{"_index":892,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.shoppinglistform.setvalue",{"_index":883,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.shoppinglistservice.addingredient(newingredient",{"_index":891,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.shoppinglistservice.addingredients(ingredients",{"_index":806,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.shoppinglistservice.deleteingredient(this.editeditemindex",{"_index":893,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.shoppinglistservice.getingredient(index",{"_index":882,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.shoppinglistservice.getingredients",{"_index":900,"title":{},"body":{"components/ShoppingListComponent.html":{}}}],["this.shoppinglistservice.ingredientschanged.subscribe",{"_index":901,"title":{},"body":{"components/ShoppingListComponent.html":{}}}],["this.shoppinglistservice.startedediting.next(index",{"_index":902,"title":{},"body":{"components/ShoppingListComponent.html":{}}}],["this.shoppinglistservice.startedediting.subscribe",{"_index":879,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.shoppinglistservice.updateingredient(this.editeditemindex",{"_index":890,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["this.showerroralert(errormessage",{"_index":260,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.subscription",{"_index":751,"title":{},"body":{"components/RecipeListComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":755,"title":{},"body":{"components/RecipeListComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["this.tokenexpirationtimer",{"_index":412,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["this.user.next(loadeduser",{"_index":403,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["this.user.next(null",{"_index":410,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["this.user.next(user",{"_index":387,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["this.usersubscription",{"_index":530,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.usersubscription.unsubscribe",{"_index":533,"title":{},"body":{"components/HeaderComponent.html":{}}}],["throwerror",{"_index":356,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["throwerror(errormessage",{"_index":423,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["toggleopen(eventdata",{"_index":507,"title":{},"body":{"directives/DropdownDirective.html":{}}}],["token",{"_index":380,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["tokenexpirationtimer",{"_index":362,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["top",{"_index":47,"title":{},"body":{"components/AlertComponent.html":{}}}],["touched",{"_index":729,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["transform",{"_index":591,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["transparent",{"_index":581,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["true",{"_index":232,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/ShoppingEditComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["turkish",{"_index":786,"title":{},"body":{"injectables/RecipeService.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"classes/Ingredient.html":{},"classes/LoggingService.html":{},"directives/PlaceholderDirective.html":{},"classes/Recipe.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"guards/RecipesResolverService.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1017,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":419,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["up",{"_index":277,"title":{},"body":{"components/AuthComponent.html":{}}}],["update",{"_index":895,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["updateingredient",{"_index":917,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["updateingredient(index",{"_index":932,"title":{},"body":{"classes/ShoppingListService.html":{}}}],["updaterecipe",{"_index":764,"title":{},"body":{"injectables/RecipeService.html":{}}}],["updaterecipe(index",{"_index":778,"title":{},"body":{"injectables/RecipeService.html":{}}}],["url",{"_index":724,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["urltree",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":1006,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":461,"title":{},"body":{"modules/CoreModule.html":{}}}],["user",{"_index":302,"title":{"classes/User.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user(email",{"_index":386,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["user.model",{"_index":358,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["user.token",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["userdata",{"_index":392,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["userdata._token",{"_index":400,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["userdata.email",{"_index":398,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["userdata.id",{"_index":399,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["userid",{"_index":379,"title":{},"body":{"interfaces/AuthResponseData.html":{},"injectables/AuthService.html":{}}}],["usersubscription",{"_index":516,"title":{},"body":{"components/HeaderComponent.html":{}}}],["validators",{"_index":688,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["validators.pattern(/^[1",{"_index":705,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["validators.required",{"_index":704,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["value",{"_index":227,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"directives/DropdownDirective.html":{},"components/HeaderComponent.html":{},"components/RecipeEditComponent.html":{},"injectables/RecipeService.html":{},"components/ShoppingEditComponent.html":{},"classes/ShoppingListService.html":{},"miscellaneous/variables.html":{}}}],["value.amount",{"_index":889,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["var",{"_index":79,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{}}}],["variable",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1046,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["via",{"_index":1021,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":234,"title":{},"body":{"components/AuthComponent.html":{},"components/ShoppingEditComponent.html":{}}}],["viewchild('f",{"_index":877,"title":{},"body":{"components/ShoppingEditComponent.html":{}}}],["viewchild(placeholderdirective",{"_index":223,"title":{},"body":{"components/AuthComponent.html":{}}}],["viewcontainerref",{"_index":608,"title":{},"body":{"directives/PlaceholderDirective.html":{}}}],["void",{"_index":35,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"classes/LoggingService.html":{},"components/RecipeDetailComponent.html":{},"components/RecipeEditComponent.html":{},"components/RecipeItemComponent.html":{},"components/RecipeListComponent.html":{},"injectables/RecipeService.html":{},"components/RecipeStartComponent.html":{},"components/RecipesComponent.html":{},"components/ShoppingEditComponent.html":{},"components/ShoppingListComponent.html":{},"classes/ShoppingListService.html":{}}}],["white",{"_index":66,"title":{},"body":{"components/AlertComponent.html":{}}}],["width",{"_index":50,"title":{},"body":{"components/AlertComponent.html":{},"components/LoadingSpinnerComponent.html":{}}}],["x",{"_index":725,"title":{},"body":{"components/RecipeEditComponent.html":{}}}],["z",{"_index":57,"title":{},"body":{"components/AlertComponent.html":{}}}],["zone.js",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RecipesModule.html":{},"modules/SharedModule.html":{},"modules/ShoppingListModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alert/alert.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert\n            \n\n            \n                styleUrls\n                ./alert.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alert/alert.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alert/alert.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/alert/alert.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: [\n    './alert.component.css'\n  ]\n})\nexport class AlertComponent {\n  @Input() message: string;\n  @Output() close = new EventEmitter();\n\n  onClose() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n\n  {{ message }}\n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n                \n                    ./alert.component.css\n                \n                .backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.75);\n  z-index: 50;\n}\n\n.alert-box {\n  position: fixed;\n  top: 30vh;\n  left: 20vw;\n  width: 60vw;\n  padding: 16px;\n  z-index: 100;\n  background: white;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n}\n\n.alert-box-actions {\n  text-align: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ message }}            Close      '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport { LoggingService } from './logging.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService, private loggingService: LoggingService) {}\n\n  ngOnInit() {\n    this.authService.autoLogin();\n    this.loggingService.printLog('Hello from AppComponent ngOninit');\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\nimport { CoreModule } from './core.module';\nimport { LoggingService } from './logging.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    SharedModule,\n    CoreModule,\n  ],\n  bootstrap: [AppComponent],\n  //providers: [LoggingService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/recipes', pathMatch: 'full' },\n  {\n    path: 'recipes',\n    // loadChildren: './recipes/recipes.module#RecipesModule',\n    loadChildren: () => \"import('./recipes/recipes.module').then(m => m.RecipesModule)\"\n  },\n  {\n    path: 'shopping-list',\n    loadChildren: () => \"import('./shopping-list/shopping-list.module').then(m => m.ShoppingListModule)\"\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\"\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, {preloadingStrategy: PreloadAllModules})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n\n\n\n            \n                templateUrl\n                auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertHost\n                            \n                            \n                                    Private\n                                closeSub\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                isLoginMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                onHandleError\n                            \n                            \n                                onSubmit\n                            \n                            \n                                onSwitchMode\n                            \n                            \n                                    Private\n                                showErrorAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onHandleError\n                        \n                        \n                    \n                \n            \n            \n                \nonHandleError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSwitchMode\n                        \n                        \n                    \n                \n            \n            \n                \nonSwitchMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showErrorAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showErrorAlert(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alertHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PlaceholderDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(PlaceholderDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            closeSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { AlertComponent } from '../shared/alert/alert.component';\nimport { PlaceholderDirective } from '../shared/placeholder/placeholder.directive';\nimport { AuthService, AuthResponseData } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: 'auth.component.html',\n})\nexport class AuthComponent implements OnDestroy{\n  isLoginMode = true;\n  isLoading = false;\n  error: string = null;\n  @ViewChild(PlaceholderDirective) alertHost: PlaceholderDirective;\n  private closeSub: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n\n    const email = form.value.email;\n    const password = form.value.password;\n\n    this.isLoading = true;\n\n    let authObs: Observable;\n\n    if (this.isLoginMode) {\n      authObs = this.authService.login(email, password);\n    } else {\n      authObs = this.authService.signUp(email, password);\n    }\n\n    authObs.subscribe(\n      (respData) => {\n        console.log(respData);\n        this.isLoading = false;\n        this.router.navigate(['/recipes']);\n      },\n      (errorMessage) => {\n        console.log(errorMessage);\n        this.error = errorMessage;\n        this.showErrorAlert(errorMessage);\n        this.isLoading = false;\n      }\n      );\n\n      form.reset();\n    }\n\n    onHandleError() {\n      this.error = null;\n    }\n\n    ngOnDestroy() {\n      if (this.closeSub) {\n        this.closeSub.unsubscribe();\n      }\n    }\n\n    private showErrorAlert(message: string) {\n      const alertCmpFactory = this.componentFactoryResolver.resolveComponentFactory(\n        AlertComponent\n        );\n\n        const hostViewContainerRef = this.alertHost.viewContainerRef;\n        hostViewContainerRef.clear();\n\n        const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\n\n        componentRef.instance.message = message;\n        this.closeSub = componentRef.instance.close.subscribe(() => {\n          this.closeSub.unsubscribe();\n          hostViewContainerRef.clear();\n        });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n       {{ error }} \n     -->\n     -->\n    \n      \n    \n    \n      \n        E-Mail\n        \n      \n      \n        Password\n        \n      \n      \n        \n          {{ isLoginMode ? \"Login\" : \"Sign Up\" }}\n        \n        |\n        \n          Switch to {{ isLoginMode ? \"Sign Up\" : \"Login\" }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             {{ error }}      -->     -->                                E-Mail                            Password                                      {{ isLoginMode ? \"Login\" : \"Sign Up\" }}                |                  Switch to {{ isLoginMode ? \"Sign Up\" : \"Login\" }}                    '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, router: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    router\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    router: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Promise\n    | Observable {\n    return this.authService.user.pipe(\n      take(1),\n      map((user) => {\n        const isAuth = !!user;\n\n        if (isAuth) {\n          return true;\n        }\n        return this.router.createUrlTree(['/auth']);\n      })\n      // in older angular version\n      // tap(isAuth => {\n      //   if (!isAuth) {\n      //     this.router.navigate(['/auth']);\n      //   }\n      // })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptorService.html":{"url":"interceptors/AuthInterceptorService.html","title":"interceptor - AuthInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth-interceptor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpParams,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { exhaustMap, take, tap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return this.authService.user.pipe(\n      take(1),\n      exhaustMap((user) => {\n        if (!user) {\n          return next.handle(req);\n        }\n        const modifiedReq = req.clone({\n          params: new HttpParams().set('auth', user.token),\n        });\n        return next.handle(modifiedReq);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { AuthComponent } from \"./auth.component\";\n\n@NgModule({\n  declarations: [\n    AuthComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{path: '', component: AuthComponent}]),\n    SharedModule\n  ]\n})\nexport class AuthModule{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponseData.html":{"url":"interfaces/AuthResponseData.html","title":"interface - AuthResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        expiresIn\n                                \n                                \n                                        idToken\n                                \n                                \n                                        localId\n                                \n                                \n                                        refreshToken\n                                \n                                \n                                            Optional\n                                        registered\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                    \n                                \n                                \n                                    \n                                        expiresIn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localId\n                                    \n                                \n                                \n                                    \n                                        localId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { User } from './user.model';\nimport { environment } from '../../environments/environment';\n\nexport interface AuthResponseData {\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  displayName?: string;\n  registered?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  user = new BehaviorSubject(null);\n  private tokenExpirationTimer: any;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  signUp(email: string, password: string) {\n    return this.http\n      .post(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=' + environment.firebaseAPIKey,\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(\n        catchError(this.handleError),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          );\n        })\n      );\n  }\n\n  private handleAuthentication(\n    email: string,\n    userId: string,\n    token: string,\n    expiresIn: number\n  ) {\n    const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n    const user = new User(email, userId, token, expirationDate);\n    this.user.next(user);\n    this.autoLogout(expiresIn * 1000);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n\n  autoLogin() {\n    const userData: {\n      email: string;\n      id: string;\n      _token: string;\n      _tokenExpirationDate: string;\n    } = JSON.parse(localStorage.getItem('userData'));\n\n    if (!userData) {\n      return;\n    }\n\n    const loadedUser = new User(\n      userData.email,\n      userData.id,\n      userData._token,\n      new Date(userData._tokenExpirationDate)\n    );\n\n    if (loadedUser.token) {\n      this.user.next(loadedUser);\n      const expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\n      this.autoLogout(expirationDuration);\n    }\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + environment.firebaseAPIKey,\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(\n        catchError(this.handleError),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          );\n        })\n      );\n  }\n\n  logout() {\n    this.user.next(null);\n    this.router.navigate(['/auth']);\n    localStorage.removeItem('userData');\n\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n    }\n    this.tokenExpirationTimer = null;\n  }\n\n  autoLogout(expirationDuration: number) {\n    console.log(expirationDuration);\n\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.logout();\n    }, expirationDuration);\n  }\n\n  private handleError(errorResp: HttpErrorResponse) {\n    let errorMessage = 'An unknown error occured!';\n\n    if (!errorResp.error || !errorResp.error.error) {\n      return throwError(errorMessage);\n    }\n    switch (errorResp.error.error.message) {\n      case 'EMAIL_EXISTS':\n        errorMessage = 'This email exists already!';\n        break;\n      case 'EMAIL_NOT_FOUND':\n        errorMessage = 'Cannot find this email!';\n        break;\n      case 'INVALID_PASSWORD':\n        errorMessage = 'This password is not correct';\n        break;\n    }\n    return throwError(errorMessage);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tokenExpirationTimer\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoLogin\n                            \n                            \n                                autoLogout\n                            \n                            \n                                    Private\n                                handleAuthentication\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autoLogin\n                        \n                        \n                    \n                \n            \n            \n                \nautoLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autoLogout\n                        \n                        \n                    \n                \n            \n            \n                \nautoLogout(expirationDuration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expirationDuration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthentication(email: string, userId: string, token: string, expiresIn: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expiresIn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(errorResp: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResp\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \nsignUp(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenExpirationTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { User } from './user.model';\nimport { environment } from '../../environments/environment';\n\nexport interface AuthResponseData {\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  displayName?: string;\n  registered?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  user = new BehaviorSubject(null);\n  private tokenExpirationTimer: any;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  signUp(email: string, password: string) {\n    return this.http\n      .post(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=' + environment.firebaseAPIKey,\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(\n        catchError(this.handleError),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          );\n        })\n      );\n  }\n\n  private handleAuthentication(\n    email: string,\n    userId: string,\n    token: string,\n    expiresIn: number\n  ) {\n    const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n    const user = new User(email, userId, token, expirationDate);\n    this.user.next(user);\n    this.autoLogout(expiresIn * 1000);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n\n  autoLogin() {\n    const userData: {\n      email: string;\n      id: string;\n      _token: string;\n      _tokenExpirationDate: string;\n    } = JSON.parse(localStorage.getItem('userData'));\n\n    if (!userData) {\n      return;\n    }\n\n    const loadedUser = new User(\n      userData.email,\n      userData.id,\n      userData._token,\n      new Date(userData._tokenExpirationDate)\n    );\n\n    if (loadedUser.token) {\n      this.user.next(loadedUser);\n      const expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\n      this.autoLogout(expirationDuration);\n    }\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + environment.firebaseAPIKey,\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(\n        catchError(this.handleError),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          );\n        })\n      );\n  }\n\n  logout() {\n    this.user.next(null);\n    this.router.navigate(['/auth']);\n    localStorage.removeItem('userData');\n\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n    }\n    this.tokenExpirationTimer = null;\n  }\n\n  autoLogout(expirationDuration: number) {\n    console.log(expirationDuration);\n\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.logout();\n    }, expirationDuration);\n  }\n\n  private handleError(errorResp: HttpErrorResponse) {\n    let errorMessage = 'An unknown error occured!';\n\n    if (!errorResp.error || !errorResp.error.error) {\n      return throwError(errorMessage);\n    }\n    switch (errorResp.error.error.message) {\n      case 'EMAIL_EXISTS':\n        errorMessage = 'This email exists already!';\n        break;\n      case 'EMAIL_NOT_FOUND':\n        errorMessage = 'Cannot find this email!';\n        break;\n      case 'INVALID_PASSWORD':\n        errorMessage = 'This password is not correct';\n        break;\n    }\n    return throwError(errorMessage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAuthInterceptorService->CoreModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nCoreModule -->\n\nRecipeService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthInterceptorService\n                        \n                        \n                            RecipeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { NgModule } from \"@angular/core\";\nimport { AuthInterceptorService } from \"./auth/auth-interceptor.service\";\nimport { RecipeService } from \"./recipes/recipe.service\";\nimport { ShoppingListService } from \"./shopping-list/shopping-list.service\";\n\n@NgModule({\n  providers: [\n    ShoppingListService,\n    RecipeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    }\n  ],\n})\nexport class CoreModule{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataStorageService.html":{"url":"injectables/DataStorageService.html","title":"injectable - DataStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/data-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchRecipes\n                            \n                            \n                                storeRecipes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, recipeService: RecipeService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/data-storage.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchRecipes\n                        \n                        \n                    \n                \n            \n            \n                \nfetchRecipes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data-storage.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            storeRecipes\n                        \n                        \n                    \n                \n            \n            \n                \nstoreRecipes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data-storage.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Recipe } from '../recipes/recipe.model';\nimport { RecipeService } from '../recipes/recipe.service';\nimport { map, tap } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class DataStorageService {\n  constructor(\n    private http: HttpClient,\n    private recipeService: RecipeService,\n    private authService: AuthService\n  ) {}\n\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n\n    this.http\n      .put(\n        'https://ng-course-recipe-book-a2cbf-default-rtdb.firebaseio.com/recipes.json',\n        recipes\n      )\n      .subscribe((response) => {\n        console.log(response);\n      });\n  }\n\n  fetchRecipes() {\n    return this.http\n      .get(\n        'https://ng-course-recipe-book-a2cbf-default-rtdb.firebaseio.com/recipes.json'\n      )\n      .pipe(\n        map((recipes) => {\n          return recipes.map((recipe) => {\n            return {\n              ...recipe,\n              ingredients: recipe.ingredients ? recipe.ingredients : [],\n            };\n          });\n        }),\n        tap((recipes) => {\n          this.recipeService.setRecipes(recipes);\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropdownDirective.html":{"url":"directives/DropdownDirective.html","title":"directive - DropdownDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropdownDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/dropdown.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDropdown]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.open\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dropdown.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.open\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/dropdown.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(eventData: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dropdown.directive.ts:14\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, HostBinding, HostListener, Input} from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n  }\n)\nexport class DropdownDirective {\n  @HostBinding('class.open') isOpen = false;\n\n  // @HostListener('click') toggleOpen(eventData: Event) {\n  //   this.isOpen = !this.isOpen;\n  // }\n\n  @HostListener('document:click', ['$event']) toggleOpen(eventData: Event) {\n    this.isOpen = this.elRef.nativeElement.contains(eventData.target) ? !this.isOpen : false;\n  }\n\n  constructor(private elRef: ElementRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                    Private\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFetchData\n                            \n                            \n                                onLogout\n                            \n                            \n                                onSaveData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataStorageService: DataStorageService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataStorageService\n                                                  \n                                                        \n                                                                        DataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFetchData\n                        \n                        \n                    \n                \n            \n            \n                \nonFetchData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveData\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { DataStorageService } from '../shared/data-storage.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  isAuthenticated = false;\n  private userSubscription: Subscription;\n\n  constructor(\n    private dataStorageService: DataStorageService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.userSubscription = this.authService.user.subscribe(user => {\n      this.isAuthenticated = !!user;\n    });\n  }\n\n  ngOnDestroy() {\n    this.userSubscription.unsubscribe();\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  onSaveData() {\n    this.dataStorageService.storeRecipes();\n  }\n\n  onFetchData() {\n    this.dataStorageService.fetchRecipes().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Recipe Book\n    \n\n    \n      \n        \n          Authenticate\n        \n        \n          Recipes\n        \n        \n          Shopping-List\n        \n      \n      \n        \n          Logout\n        \n        \n          Manage \n          \n            \n              Save Data\n            \n            \n              Fetching Data\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Recipe Book                                Authenticate                          Recipes                          Shopping-List                                      Logout                          Manage                                     Save Data                                      Fetching Data                                          '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ingredient.html":{"url":"classes/Ingredient.html","title":"class - Ingredient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ingredient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ingredient.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, amount: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ingredient.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        amount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ingredient.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ingredient.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Ingredient {\n\n  constructor(public name: string, public amount: number) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingSpinnerComponent.html":{"url":"components/LoadingSpinnerComponent.html","title":"component - LoadingSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/loading-spinner/loading-spinner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-spinner\n            \n\n            \n                styleUrls\n                ./loading-spinner.component.css\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'app-loading-spinner',\n  template: '',\n  styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent{\n\n}\n\n    \n\n\n    \n                \n                    ./loading-spinner.component.css\n                \n                .lds-ring {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-ring div {\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid rgb(143, 143, 143);\n  border-radius: 50%;\n  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: rgb(143, 143, 143) transparent transparent transparent;\n}\n.lds-ring div:nth-child(1) {\n  animation-delay: -0.45s;\n}\n.lds-ring div:nth-child(2) {\n  animation-delay: -0.3s;\n}\n.lds-ring div:nth-child(3) {\n  animation-delay: -0.15s;\n}\n@keyframes lds-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingService.html":{"url":"classes/LoggingService.html","title":"class - LoggingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/logging.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastlog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                printLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastlog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logging.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printLog\n                        \n                        \n                    \n                \n            \n            \n                \nprintLog(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/logging.service.ts:11\n                \n            \n\n\n            \n                \n                    To print a log message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n// @Injectable({providedIn: 'root'})\nexport class LoggingService {\n  lastlog: string;\n\n  /**\n   * To print a log message\n   * @param message\n   */\n  printLog (message: string) {\n    console.log('Current message: ' + message);\n    console.log('Last message: ' + this.lastlog);\n    this.lastlog = message;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PlaceholderDirective.html":{"url":"directives/PlaceholderDirective.html","title":"directive - PlaceholderDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PlaceholderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/placeholder/placeholder.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appPlaceholder]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/placeholder/placeholder.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/placeholder/placeholder.directive.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from \"@angular/core\";\n\n@Directive({\n  selector: '[appPlaceholder]'\n})\nexport class PlaceholderDirective{\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Recipe.html":{"url":"classes/Recipe.html","title":"class - Recipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Recipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/recipes/recipe.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                imagePath\n                            \n                            \n                                    Public\n                                ingredients\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, description: string, imagePath: string, ingredients: Ingredient[])\n                    \n                \n                        \n                            \n                                Defined in src/app/recipes/recipe.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredients\n                                                  \n                                                        \n                                                                        Ingredient[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imagePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ingredients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ingredient[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Ingredient} from '../shared/ingredient.model';\n\nexport class Recipe {\n  public name: string;\n  public description: string;\n  public imagePath: string;\n  public ingredients: Ingredient[];\n\n  constructor(name: string, description: string, imagePath: string, ingredients: Ingredient[]) {\n    this.name = name;\n    this.description = description;\n    this.imagePath = imagePath;\n    this.ingredients = ingredients;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipeDetailComponent.html":{"url":"components/RecipeDetailComponent.html","title":"component - RecipeDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecipeDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recipes/recipe-detail/recipe-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe-detail\n            \n\n            \n                styleUrls\n                ./recipe-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recipe-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                recipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAddToShoppingList\n                            \n                            \n                                onDeleteRecipe\n                            \n                            \n                                onEditRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(recipeService: RecipeService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/recipes/recipe-detail/recipe-detail.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-detail/recipe-detail.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAddToShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \nonAddToShoppingList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-detail/recipe-detail.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteRecipe\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-detail/recipe-detail.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEditRecipe\n                        \n                        \n                    \n                \n            \n            \n                \nonEditRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-detail/recipe-detail.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe-detail/recipe-detail.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Recipe\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe-detail/recipe-detail.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Recipe} from '../recipe.model';\nimport {RecipeService} from '../recipe.service';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n   recipe: Recipe;\n   id: number;\n\n  constructor(private recipeService: RecipeService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.id = +params['id'];\n        this.recipe = this.recipeService.getRecipe(this.id);\n      }\n    );\n  }\n\n  onAddToShoppingList() {\n    this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\n  }\n\n  onEditRecipe() {\n    this.router.navigate(['edit'], {relativeTo: this.route});\n    //this.router.navigate(['../', this.id, 'edit'], {relativeTo: this.route});\n  }\n\n  onDeleteRecipe() {\n    this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['/recipes']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n  \n    {{ recipe.name }}\n  \n\n\n\n  \n    \n      \n        Manage Recipe \n      \n      \n        \n          To Shopping List\n        \n        \n          Edit Recipe\n        \n        Delete Recipe\n      \n    \n  \n\n\n\n  \n    {{ recipe.description }}\n  \n\n\n\n  \n    \n      \n        {{ ingredient.name }} - {{ ingredient.amount }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./recipe-detail.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ recipe.name }}                      Manage Recipe                               To Shopping List                          Edit Recipe                Delete Recipe                  {{ recipe.description }}                      {{ ingredient.name }} - {{ ingredient.amount }}            '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'RecipeDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipeEditComponent.html":{"url":"components/RecipeEditComponent.html","title":"component - RecipeEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecipeEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recipes/recipe-edit/recipe-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe-edit\n            \n\n            \n                styleUrls\n                ./recipe-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recipe-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                id\n                            \n                            \n                                recipeForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddIngredient\n                            \n                            \n                                onCancel\n                            \n                            \n                                onDeleteIngredient\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, recipeService: RecipeService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAddIngredient\n                        \n                        \n                    \n                \n            \n            \n                \nonAddIngredient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCancel\n                        \n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteIngredient\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteIngredient(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recipeForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controls\n                    \n                \n\n                \n                    \n                        getcontrols()\n                    \n                \n                            \n                                \n                                    Defined in src/app/recipes/recipe-edit/recipe-edit.component.ts:50\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css'],\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode: boolean = false;\n  recipeForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipeService: RecipeService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n      this.initForm();\n    });\n  }\n\n  onSubmit() {\n    // const newRecipe = new Recipe(\n    //   this.recipeForm.value['name'],\n    //   this.recipeForm.value['description'],\n    //   this.recipeForm.value['imagePath'],\n    //   this.recipeForm.value['ingredients']\n    //   );\n\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n\n  get controls() {\n    return (this.recipeForm.get('ingredients')).controls;\n  }\n\n  onAddIngredient() {\n    (this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        name: new FormControl(null, Validators.required),\n        amount: new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/),\n        ]),\n      })\n    );\n  }\n\n  onDeleteIngredient(index: number) {\n    (this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              name: new FormControl(ingredient.name, Validators.required),\n              amount: new FormControl(ingredient.amount, [\n                Validators.required,\n                Validators.pattern(/^[1-9]+[0-9]*$/),\n              ]),\n            })\n          );\n        }\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      imagePath: new FormControl(recipeImagePath, Validators.required),\n      description: new FormControl(recipeDescription, Validators.required),\n      ingredients: recipeIngredients,\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Save\n          \n          Cancel\n        \n      \n      \n        \n          \n            Name\n            \n          \n        \n      \n      \n        \n          \n            Image URL\n            \n          \n        \n      \n      \n        \n          \n        \n      \n      \n        \n          \n            Description\n            \n          \n        \n      \n      \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              X\n            \n          \n          \n          \n            \n              \n                Add Ingredient\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./recipe-edit.component.css\n                \n                input.ng-invalid.ng-touched,\ntextarea.ng-invalid.ng-touched {\n  border: 1px solid red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Save                    Cancel                                                  Name                                                                        Image URL                                                                                                              Description                                                                                                                                                                  X                                                                                    Add Ingredient                                                        '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'RecipeEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipeItemComponent.html":{"url":"components/RecipeItemComponent.html","title":"component - RecipeItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecipeItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe-item\n            \n\n            \n                styleUrls\n                ./recipe-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recipe-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                recipe\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        recipe\n                    \n                \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Recipe} from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() index: number;\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n  \n    {{ recipe.name }}\n    {{ recipe.description }}\n  \n  \n        \n      \n\n\n    \n\n    \n                \n                    ./recipe-item.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ recipe.name }}    {{ recipe.description }}                  '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'RecipeItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipeListComponent.html":{"url":"components/RecipeListComponent.html","title":"component - RecipeListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecipeListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recipes/recipe-list/recipe-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe-list\n            \n\n            \n                styleUrls\n                ./recipe-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recipe-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                recipes\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNewRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(recipeService: RecipeService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/recipes/recipe-list/recipe-list.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-list/recipe-list.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-list/recipe-list.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNewRecipe\n                        \n                        \n                    \n                \n            \n            \n                \nonNewRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-list/recipe-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recipes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Recipe[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe-list/recipe-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe-list/recipe-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport {RecipeService} from '../recipe.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n  recipes: Recipe[];\n  subscription: Subscription;\n\n  constructor(private recipeService: RecipeService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.subscription = this.recipeService.recipesChanged.subscribe(\n      (recipes: Recipe[]) => {\n        this.recipes = recipes;\n      }\n    );\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n  onNewRecipe() {\n    this.router.navigate(['new'], {relativeTo: this.route});\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    New Recipe\n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./recipe-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      New Recipe              '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'RecipeListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecipeService.html":{"url":"injectables/RecipeService.html","title":"injectable - RecipeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RecipeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/recipes/recipe.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                recipes\n                            \n                            \n                                recipesChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addIngredientsToShoppingList\n                            \n                            \n                                addRecipe\n                            \n                            \n                                deleteRecipe\n                            \n                            \n                                getRecipe\n                            \n                            \n                                getRecipes\n                            \n                            \n                                setRecipes\n                            \n                            \n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingListService: ShoppingListService)\n                    \n                \n                        \n                            \n                                Defined in src/app/recipes/recipe.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingListService\n                                                  \n                                                        \n                                                                        ShoppingListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addIngredientsToShoppingList\n                        \n                        \n                    \n                \n            \n            \n                \naddIngredientsToShoppingList(ingredients: Ingredient[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredients\n                                    \n                                                Ingredient[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRecipe\n                        \n                        \n                    \n                \n            \n            \n                \naddRecipe(recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteRecipe\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteRecipe(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecipe\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecipe(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecipes\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecipes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRecipes\n                        \n                        \n                    \n                \n            \n            \n                \nsetRecipes(recipes: Recipe[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipes\n                                    \n                                                Recipe[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateRecipe\n                        \n                        \n                    \n                \n            \n            \n                \nupdateRecipe(index: number, newRecipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newRecipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            recipes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Recipe[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recipesChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recipes/recipe.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Recipe} from './recipe.model';\nimport {Injectable} from '@angular/core';\nimport {Ingredient} from '../shared/ingredient.model';\nimport {ShoppingListService} from '../shopping-list/shopping-list.service';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class RecipeService {\n  recipesChanged = new Subject();\n\n  private recipes: Recipe[] = [];\n\n  // private recipes: Recipe[] = [\n  //   new Recipe(\n  //     'Iskender Kebab',\n  //     'Delicious meal from the turkish city Bursa',\n  //     'https://upload.wikimedia.org/wikipedia/commons/c/ce/Iskender_kebap-2.jpg',\n  //     [\n  //       new Ingredient('Cow Meat', 1),\n  //       new Ingredient('Pide bread', 1),\n  //       new Ingredient('yoghurt', 1),\n  //       new Ingredient('Tomato Sauce', 1)\n  //     ]\n  //   ),\n  //   new Recipe(\n  //     'Inegöl Köfte',\n  //     'Delicious meal from the turkish city Inegöl',\n  //     'https://upload.wikimedia.org/wikipedia/commons/0/05/%C4%B0neg%C3%B6l_k%C3%B6fte.jpg',\n  //     [\n  //       new Ingredient('Cow Meat', 1),\n  //       new Ingredient('Lamb Meat', 1),\n  //       new Ingredient('Bread', 1)\n  //     ]\n  //   )\n  // ];\n\n  constructor(private shoppingListService: ShoppingListService) {}\n\n  setRecipes(recipes: Recipe[]) {\n    this.recipes = recipes;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  getRecipes() {\n    return this.recipes.slice();\n  }\n\n  getRecipe(index: number) {\n    return this.recipes[index];\n  }\n\n  addIngredientsToShoppingList(ingredients: Ingredient[]) {\n    this.shoppingListService.addIngredients(ingredients);\n  }\n\n  addRecipe(recipe: Recipe) {\n    this.recipes.push(recipe);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  updateRecipe(index: number, newRecipe: Recipe) {\n    this.recipes[index] = newRecipe;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  deleteRecipe(index: number) {\n    this.recipes.splice(index, 1);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipeStartComponent.html":{"url":"components/RecipeStartComponent.html","title":"component - RecipeStartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecipeStartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recipes/recipe-start/recipe-start.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe-start\n            \n\n            \n                styleUrls\n                ./recipe-start.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recipe-start.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/recipes/recipe-start/recipe-start.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipe-start/recipe-start.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Please select a recipe\n\n    \n\n    \n                \n                    ./recipe-start.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Please select a recipe'\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'RecipeStartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipesComponent.html":{"url":"components/RecipesComponent.html","title":"component - RecipesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecipesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recipes/recipes.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipes\n            \n\n            \n                styleUrls\n                ./recipes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recipes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/recipes/recipes.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipes.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./recipes.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'RecipesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecipesModule.html":{"url":"modules/RecipesModule.html","title":"module - RecipesModule","body":"\n                   \n\n\n\n\n    Modules\n    RecipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RecipesModule\n\n\n\ncluster_RecipesModule_imports\n\n\n\ncluster_RecipesModule_declarations\n\n\n\n\nRecipeDetailComponent\n\nRecipeDetailComponent\n\n\n\nRecipesModule\n\nRecipesModule\n\nRecipesModule -->\n\nRecipeDetailComponent->RecipesModule\n\n\n\n\n\nRecipeEditComponent\n\nRecipeEditComponent\n\nRecipesModule -->\n\nRecipeEditComponent->RecipesModule\n\n\n\n\n\nRecipeItemComponent\n\nRecipeItemComponent\n\nRecipesModule -->\n\nRecipeItemComponent->RecipesModule\n\n\n\n\n\nRecipeListComponent\n\nRecipeListComponent\n\nRecipesModule -->\n\nRecipeListComponent->RecipesModule\n\n\n\n\n\nRecipeStartComponent\n\nRecipeStartComponent\n\nRecipesModule -->\n\nRecipeStartComponent->RecipesModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipesModule -->\n\nRecipesComponent->RecipesModule\n\n\n\n\n\nRecipesRoutingModule\n\nRecipesRoutingModule\n\nRecipesModule -->\n\nRecipesRoutingModule->RecipesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRecipesModule -->\n\nSharedModule->RecipesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/recipes/recipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RecipeDetailComponent\n                        \n                        \n                            RecipeEditComponent\n                        \n                        \n                            RecipeItemComponent\n                        \n                        \n                            RecipeListComponent\n                        \n                        \n                            RecipeStartComponent\n                        \n                        \n                            RecipesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RecipesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\nimport { RecipeItemComponent } from \"./recipe-list/recipe-item/recipe-item.component\";\nimport { RecipeListComponent } from \"./recipe-list/recipe-list.component\";\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\nimport { RecipesRoutingModule } from \"./recipes-routing.module\";\nimport { RecipesComponent } from \"./recipes.component\";\n\n@NgModule({\n  declarations: [\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailComponent,\n    RecipeItemComponent,\n    RecipeStartComponent,\n    RecipeEditComponent,\n  ],\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    RecipesRoutingModule,\n    SharedModule\n  ]\n})\nexport class RecipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RecipesResolverService.html":{"url":"guards/RecipesResolverService.html","title":"guard - RecipesResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RecipesResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/recipes/recipes-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataStorageService: DataStorageService, recipesService: RecipeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/recipes/recipes-resolver.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataStorageService\n                                                  \n                                                        \n                                                                        DataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recipesService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recipes/recipes-resolver.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\nimport { DataStorageService } from \"../shared/data-storage.service\";\nimport { Recipe } from \"./recipe.model\";\nimport { RecipeService } from \"./recipe.service\";\n\n@Injectable({providedIn: 'root'})\nexport class RecipesResolverService implements Resolve{\n  constructor(private dataStorageService: DataStorageService, private recipesService: RecipeService) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const recipes = this.recipesService.getRecipes();\n\n    if (recipes.length === 0) {\n      return this.dataStorageService.fetchRecipes();\n    } else {\n      return recipes;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecipesRoutingModule.html":{"url":"modules/RecipesRoutingModule.html","title":"module - RecipesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RecipesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/recipes/recipes-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AuthGuard } from \"../auth/auth.guard\";\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\nimport { RecipesResolverService } from \"./recipes-resolver.service\";\nimport { RecipesComponent } from \"./recipes.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecipesComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: '', component: RecipeStartComponent },\n      { path: 'new', component: RecipeEditComponent },\n      {\n        path: ':id',\n        component: RecipeDetailComponent,\n        resolve: [RecipesResolverService],\n      },\n      {\n        path: ':id/edit',\n        component: RecipeEditComponent,\n        resolve: [RecipesResolverService],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class RecipesRoutingModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nAlertComponent\n\nAlertComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlertComponent->SharedModule\n\n\n\n\n\nDropdownDirective\n\nDropdownDirective\n\nSharedModule -->\n\nDropdownDirective->SharedModule\n\n\n\n\n\nLoadingSpinnerComponent\n\nLoadingSpinnerComponent\n\nSharedModule -->\n\nLoadingSpinnerComponent->SharedModule\n\n\n\n\n\nPlaceholderDirective\n\nPlaceholderDirective\n\nSharedModule -->\n\nPlaceholderDirective->SharedModule\n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSharedModule->AlertComponent \n\n\n\n\n\nDropdownDirective \n\nDropdownDirective \n\nDropdownDirective  -->\n\nSharedModule->DropdownDirective \n\n\n\n\n\nLoadingSpinnerComponent \n\nLoadingSpinnerComponent \n\nLoadingSpinnerComponent  -->\n\nSharedModule->LoadingSpinnerComponent \n\n\n\n\n\nPlaceholderDirective \n\nPlaceholderDirective \n\nPlaceholderDirective  -->\n\nSharedModule->PlaceholderDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertComponent\n                        \n                        \n                            DropdownDirective\n                        \n                        \n                            LoadingSpinnerComponent\n                        \n                        \n                            PlaceholderDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AlertComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlertComponent\n                        \n                        \n                            DropdownDirective\n                        \n                        \n                            LoadingSpinnerComponent\n                        \n                        \n                            PlaceholderDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { LoggingService } from \"../logging.service\";\nimport { AlertComponent } from \"./alert/alert.component\";\nimport { DropdownDirective } from \"./dropdown.directive\";\nimport { LoadingSpinnerComponent } from \"./loading-spinner/loading-spinner.component\";\nimport { PlaceholderDirective } from \"./placeholder/placeholder.directive\";\n\n@NgModule( {\n  declarations: [\n    AlertComponent,\n    LoadingSpinnerComponent,\n    PlaceholderDirective,\n    DropdownDirective\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    AlertComponent,\n    LoadingSpinnerComponent,\n    PlaceholderDirective,\n    DropdownDirective,\n    CommonModule\n  ],\n  entryComponents: [\n    AlertComponent\n  ],\n  providers: [\n    LoggingService\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingEditComponent.html":{"url":"components/ShoppingEditComponent.html","title":"component - ShoppingEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShoppingEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-list/shopping-edit/shopping-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-edit\n            \n\n            \n                styleUrls\n                ./shopping-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shopping-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editedItem\n                            \n                            \n                                editedItemIndex\n                            \n                            \n                                editMode\n                            \n                            \n                                shoppingListForm\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClear\n                            \n                            \n                                onDelete\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingListService: ShoppingListService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingListService\n                                                  \n                                                        \n                                                                        ShoppingListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClear\n                        \n                        \n                    \n                \n            \n            \n                \nonClear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editedItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ingredient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editedItemIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shoppingListForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('f', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-edit/shopping-edit.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport {Ingredient} from '../../shared/ingredient.model';\nimport {ShoppingListService} from '../shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f', {static: false}) shoppingListForm: NgForm;\n  subscription: Subscription;\n  editMode = false;\n  editedItemIndex: number;\n  editedItem: Ingredient;\n\n  constructor(private shoppingListService: ShoppingListService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.shoppingListService.startedEditing.subscribe(\n      (index: number) => {\n        this.editedItemIndex = index;\n        this.editMode = true;\n        this.editedItem = this.shoppingListService.getIngredient(index);\n        this.shoppingListForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount\n        });\n      }\n    );\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n\n    if (this.editMode) {\n      this.shoppingListService.updateIngredient(this.editedItemIndex, newIngredient);\n    } else {\n      this.shoppingListService.addIngredient(newIngredient);\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onClear() {\n    this.shoppingListForm.reset();\n    this.editMode = false;\n  }\n\n  onDelete() {\n    this.shoppingListService.deleteIngredient(this.editedItemIndex);\n    this.onClear();\n\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Name\n          \n        \n        \n          Amount\n          \n        \n      \n      \n        \n           {{ editMode ? 'Update' : 'Add' }}\n          Delete\n          Clear\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./shopping-edit.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Name                                    Amount                                                 {{ editMode ? \\'Update\\' : \\'Add\\' }}          Delete          Clear                    '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingListComponent.html":{"url":"components/ShoppingListComponent.html","title":"component - ShoppingListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShoppingListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-list/shopping-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-list\n            \n\n            \n                styleUrls\n                ./shopping-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shopping-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ingredients\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEditItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingListService: ShoppingListService, loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-list/shopping-list.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingListService\n                                                  \n                                                        \n                                                                        ShoppingListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-list.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-list.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEditItem\n                        \n                        \n                    \n                \n            \n            \n                \nonEditItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ingredients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ingredient[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Ingredient} from '../shared/ingredient.model';\nimport {ShoppingListService} from './shopping-list.service';\nimport {Subscription} from 'rxjs';\nimport { LoggingService } from '../logging.service';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css'],\n})\nexport class ShoppingListComponent implements OnInit, OnDestroy {\n  ingredients: Ingredient[];\n  private subscription: Subscription;\n\n\n  constructor(private shoppingListService: ShoppingListService, private loggingService: LoggingService) { }\n\n  ngOnInit(): void {\n    this.ingredients = this.shoppingListService.getIngredients();\n    this.subscription = this.shoppingListService.ingredientsChanged.subscribe(\n      (ingredients: Ingredient[]) => {\n        this.ingredients = ingredients;\n      }\n    );\n    this.loggingService.printLog('Hello from ShoppingListComponent ngOninit');\n  }\n\n  onEditItem(index: number) {\n    this.shoppingListService.startedEditing.next(index);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n        {{ ingredient.name }} ({{ ingredient.amount }})\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./shopping-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ ingredient.name }} ({{ ingredient.amount }})            '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'RecipeDetailComponent', 'selector': 'app-recipe-detail'},{'name': 'RecipeEditComponent', 'selector': 'app-recipe-edit'},{'name': 'RecipeItemComponent', 'selector': 'app-recipe-item'},{'name': 'RecipeListComponent', 'selector': 'app-recipe-list'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'RecipeStartComponent', 'selector': 'app-recipe-start'},{'name': 'ShoppingEditComponent', 'selector': 'app-shopping-edit'},{'name': 'ShoppingListComponent', 'selector': 'app-shopping-list'}];\n    var DIRECTIVES = [{'name': 'DropdownDirective', 'selector': '[appDropdown]'},{'name': 'PlaceholderDirective', 'selector': '[appPlaceholder]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShoppingListModule.html":{"url":"modules/ShoppingListModule.html","title":"module - ShoppingListModule","body":"\n                   \n\n\n\n\n    Modules\n    ShoppingListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShoppingListModule\n\n\n\ncluster_ShoppingListModule_imports\n\n\n\ncluster_ShoppingListModule_declarations\n\n\n\n\nShoppingEditComponent\n\nShoppingEditComponent\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nShoppingListModule -->\n\nShoppingEditComponent->ShoppingListModule\n\n\n\n\n\nShoppingListComponent\n\nShoppingListComponent\n\nShoppingListModule -->\n\nShoppingListComponent->ShoppingListModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nShoppingListModule -->\n\nSharedModule->ShoppingListModule\n\n\n\n\n\nShoppingListRoutingModule\n\nShoppingListRoutingModule\n\nShoppingListModule -->\n\nShoppingListRoutingModule->ShoppingListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shopping-list/shopping-list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ShoppingEditComponent\n                        \n                        \n                            ShoppingListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            ShoppingListRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { LoggingService } from \"../logging.service\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { ShoppingEditComponent } from \"./shopping-edit/shopping-edit.component\";\nimport { ShoppingListRoutingModule } from \"./shopping-list-routing.module\";\nimport { ShoppingListComponent } from \"./shopping-list.component\";\n\n@NgModule({\n  declarations: [\n    ShoppingListComponent,\n    ShoppingEditComponent\n  ],\n  imports: [\n    ShoppingListRoutingModule,\n    FormsModule,\n    SharedModule\n  ],\n  //providers: [LoggingService]\n})\nexport class ShoppingListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShoppingListRoutingModule.html":{"url":"modules/ShoppingListRoutingModule.html","title":"module - ShoppingListRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ShoppingListRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shopping-list/shopping-list-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ShoppingListComponent } from \"./shopping-list.component\";\n\nconst routes: Routes = [\n  { path: '', component: ShoppingListComponent }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class ShoppingListRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingListService.html":{"url":"classes/ShoppingListService.html","title":"class - ShoppingListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shopping-list/shopping-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ingredients\n                            \n                            \n                                ingredientsChanged\n                            \n                            \n                                startedEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addIngredient\n                            \n                            \n                                addIngredients\n                            \n                            \n                                deleteIngredient\n                            \n                            \n                                getIngredient\n                            \n                            \n                                getIngredients\n                            \n                            \n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ingredients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ingredient[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    new Ingredient('tomatoes',3),\n    new Ingredient('lamb meat',1)\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-list.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ingredientsChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-list.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startedEditing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shopping-list/shopping-list.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addIngredient\n                        \n                        \n                    \n                \n            \n            \n                \naddIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-list.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addIngredients\n                        \n                        \n                    \n                \n            \n            \n                \naddIngredients(ingredients: Ingredient[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-list.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredients\n                                    \n                                                Ingredient[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteIngredient\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteIngredient(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-list.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIngredient\n                        \n                        \n                    \n                \n            \n            \n                \ngetIngredient(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-list.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIngredients\n                        \n                        \n                    \n                \n            \n            \n                \ngetIngredients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-list.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateIngredient\n                        \n                        \n                    \n                \n            \n            \n                \nupdateIngredient(index: number, newIngredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shopping-list/shopping-list.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newIngredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Ingredient} from '../shared/ingredient.model';\nimport {Subject} from 'rxjs';\n\nexport class ShoppingListService {\n  ingredientsChanged = new Subject();\n  startedEditing = new Subject();\n\n  private ingredients: Ingredient[] = [\n    new Ingredient('tomatoes',3),\n    new Ingredient('lamb meat',1)\n  ];\n\n  getIngredients() {\n    return this.ingredients.slice();\n  }\n\n  getIngredient(index: number) {\n    return this.ingredients[index];\n  }\n\n  addIngredient(ingredient: Ingredient) {\n    this.ingredients.push(ingredient);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  addIngredients(ingredients: Ingredient[]) {\n    this.ingredients.push(...ingredients);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  updateIngredient(index: number, newIngredient: Ingredient) {\n    this.ingredients[index] = newIngredient;\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  deleteIngredient(index: number) {\n    this.ingredients.splice(index, 1);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, id: string, _token: string, _tokenExpirationDate: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/user.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tokenExpirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/user.model.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class User {\n  constructor(\n    public email: string,\n    public id: string,\n    private _token: string,\n    private _tokenExpirationDate: Date\n  ) {}\n\n  get token() {\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\n      return null;\n    }\n    return this._token;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth-interceptor.service.ts\n            \n            interceptor\n            AuthInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            AuthResponseData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/logging.service.ts\n            \n            class\n            LoggingService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/recipes/recipe-detail/recipe-detail.component.ts\n            \n            component\n            RecipeDetailComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/recipes/recipe-edit/recipe-edit.component.ts\n            \n            component\n            RecipeEditComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts\n            \n            component\n            RecipeItemComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/recipes/recipe-list/recipe-list.component.ts\n            \n            component\n            RecipeListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/recipes/recipe-start/recipe-start.component.ts\n            \n            component\n            RecipeStartComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/recipes/recipe.model.ts\n            \n            class\n            Recipe\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/recipes/recipe.service.ts\n            \n            injectable\n            RecipeService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/recipes/recipes-resolver.service.ts\n            \n            guard\n            RecipesResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/recipes/recipes.component.ts\n            \n            component\n            RecipesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/alert/alert.component.ts\n            \n            component\n            AlertComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/data-storage.service.ts\n            \n            injectable\n            DataStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/dropdown.directive.ts\n            \n            directive\n            DropdownDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/ingredient.model.ts\n            \n            class\n            Ingredient\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/loading-spinner/loading-spinner.component.ts\n            \n            component\n            LoadingSpinnerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/placeholder/placeholder.directive.ts\n            \n            directive\n            PlaceholderDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shopping-list/shopping-edit/shopping-edit.component.ts\n            \n            component\n            ShoppingEditComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shopping-list/shopping-list.component.ts\n            \n            component\n            ShoppingListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shopping-list/shopping-list.service.ts\n            \n            class\n            ShoppingListService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.3\n        \n            @angular/common : ~11.0.3\n        \n            @angular/compiler : ~11.0.3\n        \n            @angular/core : ~11.0.3\n        \n            @angular/forms : ~11.0.3\n        \n            @angular/platform-browser : ~11.0.3\n        \n            @angular/platform-browser-dynamic : ~11.0.3\n        \n            @angular/router : ~11.0.3\n        \n            bootstrap : ^3.4.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCourseProject\nThis project was generated with Angular CLI version 11.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecipesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShoppingListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShoppingListRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_RecipesModule\n\n\n\ncluster_RecipesModule_declarations\n\n\n\ncluster_RecipesModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_ShoppingListModule\n\n\n\ncluster_ShoppingListModule_declarations\n\n\n\ncluster_ShoppingListModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nRecipesModule\n\nRecipesModule\n\nRecipesModule -->\n\nSharedModule->RecipesModule\n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSharedModule->AlertComponent \n\n\n\n\n\nDropdownDirective \n\nDropdownDirective \n\nDropdownDirective  -->\n\nSharedModule->DropdownDirective \n\n\n\n\n\nLoadingSpinnerComponent \n\nLoadingSpinnerComponent \n\nLoadingSpinnerComponent  -->\n\nSharedModule->LoadingSpinnerComponent \n\n\n\n\n\nPlaceholderDirective \n\nPlaceholderDirective \n\nPlaceholderDirective  -->\n\nSharedModule->PlaceholderDirective \n\n\n\n\n\nShoppingListModule\n\nShoppingListModule\n\nShoppingListModule -->\n\nSharedModule->ShoppingListModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\nCoreModule -->\n\nAuthInterceptorService->CoreModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nCoreModule -->\n\nRecipeService->CoreModule\n\n\n\n\n\nRecipeDetailComponent\n\nRecipeDetailComponent\n\nRecipesModule -->\n\nRecipeDetailComponent->RecipesModule\n\n\n\n\n\nRecipeEditComponent\n\nRecipeEditComponent\n\nRecipesModule -->\n\nRecipeEditComponent->RecipesModule\n\n\n\n\n\nRecipeItemComponent\n\nRecipeItemComponent\n\nRecipesModule -->\n\nRecipeItemComponent->RecipesModule\n\n\n\n\n\nRecipeListComponent\n\nRecipeListComponent\n\nRecipesModule -->\n\nRecipeListComponent->RecipesModule\n\n\n\n\n\nRecipeStartComponent\n\nRecipeStartComponent\n\nRecipesModule -->\n\nRecipeStartComponent->RecipesModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipesModule -->\n\nRecipesComponent->RecipesModule\n\n\n\n\n\nRecipesRoutingModule\n\nRecipesRoutingModule\n\nRecipesModule -->\n\nRecipesRoutingModule->RecipesModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nSharedModule -->\n\nAlertComponent->SharedModule\n\n\n\n\n\nDropdownDirective\n\nDropdownDirective\n\nSharedModule -->\n\nDropdownDirective->SharedModule\n\n\n\n\n\nLoadingSpinnerComponent\n\nLoadingSpinnerComponent\n\nSharedModule -->\n\nLoadingSpinnerComponent->SharedModule\n\n\n\n\n\nPlaceholderDirective\n\nPlaceholderDirective\n\nSharedModule -->\n\nPlaceholderDirective->SharedModule\n\n\n\n\n\nShoppingEditComponent\n\nShoppingEditComponent\n\nShoppingListModule -->\n\nShoppingEditComponent->ShoppingListModule\n\n\n\n\n\nShoppingListComponent\n\nShoppingListComponent\n\nShoppingListModule -->\n\nShoppingListComponent->ShoppingListModule\n\n\n\n\n\nShoppingListRoutingModule\n\nShoppingListRoutingModule\n\nShoppingListModule -->\n\nShoppingListRoutingModule->ShoppingListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        16 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  firebaseAPIKey: 'AIzaSyCNChjc8iklu8yYYA3w6Nhi89uVEBXFv4E'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebaseAPIKey: 'AIzaSyCNChjc8iklu8yYYA3w6Nhi89uVEBXFv4E'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
